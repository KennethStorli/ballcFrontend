{"version":3,"sources":["pages/Anonmatches.jsx","pages/Usermatches.jsx","pages/Home.jsx","pages/Next.jsx","components/SearchSmall.jsx","pages/Teams.jsx","PostData.jsx","pages/User.jsx","pages/Admin.jsx","components/CreatePerson.jsx","components/Search.jsx","pages/Person.jsx","pages/Team.jsx","pages/Association.jsx","pages/PersonInfo.jsx","pages/Owner.jsx","pages/Location.jsx","pages/Coach.jsx","pages/Teaminfo.jsx","pages/Roles.jsx","components/NewAddress.jsx","pages/Address.jsx","components/NewLocation.jsx","pages/CRUDLocation.jsx","pages/CRUDAssociation.jsx","pages/NewSeason.jsx","pages/EditSeason.jsx","components/Matchpositions.jsx","pages/Match.jsx","components/Goal.jsx","pages/Result.jsx","pages/Goaltypes.jsx","pages/Profile.jsx","pages/Watchlist.jsx","pages/WatchlistEdit.jsx","pages/Matches.jsx","components/Login.jsx","components/SignUp.jsx","components/FAQ.jsx","components/Navigator.jsx","components/NavigatorAdm.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","matches","ev","target","src","_this2","fetch","then","result","json","setState","_this3","react_default","a","createElement","Grid","Row","slice","map","team","className","Col","xs","sm","key","home_team","Image","concat","circle","onError","addDefaultSrc","home_result","index_es","id","defaultMessage","date","away_team","away_result","Component","home_score","String","fromCharCode","away_score","teams","teamID","filterText","showUser","userData","localStorage","getItem","JSON","parse","console","log","Usermatches_Home","Anonmatches_Home","Next","Search","val","myValue","value","filterUpdate","Glyphicon","glyph","type","ref","onChange","bind","Teams","filteredTeams","filter","teamName","indexOf","toLowerCase","SearchSmall_Search","team_id","Link","to","pathname","PostData","Promise","resolve","reject","method","mode","body","stringify","response","text","res","catch","error","User","checkAdmin","user","assign","user_id","password","email","username","name","admin","updateUser","users","adminBinary","onAdminCheck","assertThisInitialized","e","event","ListGroup","ListGroupItem","onClick","mdbreact","onChangeUsername","onChangeEmail","checked","color","Admin","CreatePerson","firstname","lastname","address_1","address_2","address_3","postal_code","city","country","dob","phonenumber","createperson","alert","defineProperty","group","validate","success","placeholder","Person","updatePerson","address","address_id","person_id","first_name","last_name","date_of_birth","location","address_line_1","address_line_2","address_line_3","postal","delPerson","updateContact","data3","person","contact_id","contact_type","contact_detail","addContact","delContact","persons","contact","contactID","contactToChange","personToEdit","onChangeFName","onChangeLName","onChangeA1","onChangeA2","onChangeA3","onChangePostal","onChangeCity","onChangeCountry","onChangeDOB","onChangeContactDetail","onChangeContactType","firstnameinput","lastnameinput","address1input","address2input","address3input","postalinput","cityinput","countryinput","DOBinput","contacttypeinput","contactdetailinput","filteredNames","filteredContacts","length","contacts","Search_Search","Tabs","defaultActiveKey","Tab","eventKey","title","CreatePerson_CreatePerson","Team","addTeam","selectedTeamName","association","association_id","location_id","coach","coach_id","owner","owner_id","updateTeam","delTeam","selectTeam","associations","locations","coaches","owners","ownerNames","selectedAssociation","selectedCoach","selectedLocation","selectedOwner","onChangeName","onChangeAssociation","onChangeLocation","onChangeCoach","onChangeOwner","teamNameInput","teamAssociationName","forEach","teamLocationName","teamCoachName","_this4","teamOwnerName","personName","associationinput","locationinput","coachinput","ownerinput","_this5","getTeamAssociation","getTeamLocation","getTeamCoach","getTeamOwner","getPersonName","Association","nextprop","description","Coach","people","Owner","PersonInfo_Coach","Location","Teaminfo","players","playersInTeam","Association_Association","Location_Location","Owner_Owner","Coach_Coach","normal_position","Roles","selectOption","selectedOp","selected","addRole","data","number","player","data2","objectSpread","onChangeNumber","onCoachCheck","onOwnerCheck","Checkbox","defaultChecked","FormControl","componentClass","NewAddress","createaddress","hh","Address","updateAddress","delAddress","NewAddress_NewAddress","NewLocation","createlocation","location_name","selectAdd","CRUDLocation","updateLocation","addressID","location_description","delLocation","selectLoc","selectedAddress","NewLocation_NewLocation","CRUDAssociation","createassociation","association_name","association_description","updateAssociation","delAssociation","selectAss","ass","NewSeason","addSeason","start_date","selectedDayStartString","end_date","selectedDayEndString","seasonName","seasonDescription","handleDayClickStart","handleDayClickEnd","selectedDayStart","undefined","selectedDayEnd","day","_ref","disabled","toLocaleDateString","_ref2","onChangeDescription","DayPicker_default","onDayClick","selectedDays","disabledDays","daysOfWeek","EditSeason","seasons","selectedSeason","season","season_id","Matchposition","handleGoalkeeper","selectedOption","fullposition","positions","push","handleDefence","handleMidfield","handleforward","addPosition","newdata","goaltypes","teamid","test","position","react_select_esm","options","Match","handleChangeHome","selectedOptionHome","homeID","handleChangeAway","selectedOptionAway","awayID","handleChangeSeason","selectedOptionSeason","getDataHome","positionsHome","getDataAway","positionsAway","addMatch","match_date","selectedDayString","teamsformatch","home","away","selectedDay","handleDayClick","Matchpositions_Matchposition","label","delResult","selectedPlayer","selectedGoal","handleChangePlayer","handleChangeGoal","selectgoal","Results","createGoalHome","homescore","i","Goal_Match","handleChangePlayerHome","playerHome","handleChangeGoalHome","selectedGoalType","goalTypeHome","handleChangePlayerAway","playerAway","handleChangeGoalAway","goalTypeAway","selectgoalHome","goalsHome","goaltype","homegoals","selectgoalAway","goalsAway","awaygoals","saveResult","homescoreHome","homescoreAway","hometeam","awayteam","match_id","emptyarrayHome","emptyarrayAway","emptyarray","teamname","getTeamName","filterUpdateHome","filterUpdateAway","addGoalType","newgoalname","goalname","goalID","onChangeGoalName","onChangeNewGoalName","goal_type_id","Profile","handleChangePlayers","selectedOptionPlayers","handleChangeTeams","selectedOptionTeams","Login","userDate","login","list","toConsumableArray","sendingData","axios","get","responde","reso","token","setItem","window","reload","testing","md","React","confpassword","signup","Navigator","context","handleShowHelp","handleCloseHelp","handleShow","handleClose","show","showHelp","logged","Navbar","inverse","collapseOnSelect","Header","Brand","href","Toggle","Collapse","Nav","NavItem","pullRight","logingout","Modal","onHide","closeButton","Title","Body","components_Login","SignUp","Footer","FAQ","NavDropdown","MenuItem","App","userString","BrowserRouter","Navigator_Navigator","NavigatorAdm_Navigator","Route","exact","path","component","Locations","Associations","Result","Goaltypes","Watchlist","WatchlistEdit","Matches","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","addLocaleData","en","no","language","languages","userLanguage","languageWithoutRegionCode","split","messages","localeData","IntlProviderWrapper","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","switchToEnglish","locale","switchToNorwegian","_this$state","defaultLocale","src_App_0","ReactDOM","render","src_IntlProviderWrapper","document","getElementById","URL","process","origin","addEventListener","status","headers","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5654cd11.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Row, Grid, Col, Image } from 'react-bootstrap';\nimport '../components/UpdatePerson.css'\nimport './Home.css'\nimport './Teams.css'\nimport { FormattedMessage } from 'react-intl';\n\n\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matches:[],\n\n    };\n\n  }\n  addDefaultSrc(ev){\n    ev.target.src = `images/teams/default.jpg`\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/matchlist`)\n    .then(result => result.json())\n    .then(matches => this.setState({matches}))\n\n  }\n\n\n\n    render() {\n\n    return(\n      <div>\n        <Grid>\n          <Row>\n            {this.state.matches.slice(0,10).map(team =>\n              <div className=\"matchmappingAnon\">\n                <legend>\n                  <Col xs={12} sm={4} key={team.home_team}>\n                    <h1 className=\"teamnames\">{team.home_team}</h1>\n                    <Image src={`images/teams/${team.home_team}.jpg`} circle className=\"teamimages\" onError={this.addDefaultSrc} />\n                    <h3>{team.home_result}</h3>\n                  </Col>\n                  <Col xs={12} sm={4}>\n                    <br/><br/><br/><br/><br/><br/>\n\n                    <h3> \n                    <FormattedMessage\n                    id=\"ANONMATCHES.vs\"\n                    defaultMessage=\"VS\"\n                    />\n                    </h3>\n                    <br/>\n                    <h3>{team.date}</h3>\n                  </Col>\n                  <Col xs={12} sm={4} key={team.away_team}>\n                    <h1 className=\"teamnames\">{team.away_team}</h1>\n                    <Image src={`images/teams/${team.away_team}.jpg`} circle className=\"teamimages\" onError={this.addDefaultSrc} />\n                    <h3>{team.away_result}</h3>\n                  </Col>\n                </legend>\n                <hr/>\n                <br/><br/><br/><br/><br/><br/><br/>\n\n\n              </div>\n            )}\n          </Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Row, Grid, Col, Image } from 'react-bootstrap';\nimport '../components/UpdatePerson.css'\nimport './Home.css'\nimport './Teams.css'\n\n\n\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matches:[],\n\n    };\n\n  }\n  addDefaultSrc(ev){\n    ev.target.src = `images/teams/default.jpg`\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/matchlist`)\n    .then(result => result.json())\n    .then(matches => this.setState({matches}))\n\n  }\n\n\n\n    render() {\n\n    return(\n      <div>\n        <Grid>\n          <Row>\n            {this.state.matches.slice(0,10).map(team =>\n              <div className=\"matchmappingAnon\">\n                <legend>\n                  <Col xs={12} sm={4} key={team.home_team}>\n                    <h1 className=\"teamnames\">{team.home_team}</h1>\n                    <Image src={`images/teams/${team.home_team}.jpg`} circle className=\"teamimages\" onError={this.addDefaultSrc} />\n                    <h3>{team.home_result}</h3>\n                  </Col>\n                  <Col xs={12} sm={4}>\n                    <br/><br/><br/><br/>\n\n                    <h2>{team.home_score} {String.fromCharCode(160)}{String.fromCharCode(160)}{String.fromCharCode(160)}{String.fromCharCode(160)}\n                      VS\n                      {String.fromCharCode(160)}{String.fromCharCode(160)}{String.fromCharCode(160)}{String.fromCharCode(160)}  {team.away_score} </h2>\n                    <br/>\n                    <h3>{team.date}</h3>\n                  </Col>\n                  <Col xs={12} sm={4} key={team.away_team}>\n                    <h1 className=\"teamnames\">{team.away_team}</h1>\n                    <Image src={`images/teams/${team.away_team}.jpg`} circle className=\"teamimages\" onError={this.addDefaultSrc} />\n                    <h3>{team.away_result}</h3>\n                  </Col>\n                </legend>\n                <hr/>\n                <br/><br/><br/><br/><br/><br/><br/>\n\n\n              </div>\n            )}\n          </Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\nimport {Row, Grid} from 'react-bootstrap';\nimport AnonMatches from './Anonmatches'\nimport UserMatches from './Usermatches'\n\nimport '../components/UpdatePerson.css'\nimport './Home.css'\nimport './Teams.css'\n\n\n\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      teams:[],\n      teamID:'',\n      filterText:'',\n      showUser:false\n    };\n\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/teams`)\n    .then(result => result.json())\n    .then(teams => this.setState({teams}))\n\n    var userData = localStorage.getItem(\"userData\");\n    var userString = JSON.parse(userData);\n    if(userString == null){\n      console.log(\"NOT LOGGED IN\");\n    }else{\n      this.setState({showUser: true});\n    }\n\n  }\n\n\n\n    render() {\n\n\n    return(\n      <div>\n        <Grid>\n\n          <h1>\n          <FormattedMessage\n          id=\"HOME.latestTitle\"\n          defaultMessage=\"Latest matches\"\n          />\n          </h1>\n          <Row>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n\n            { this.state.showUser ?  <UserMatches/> : <AnonMatches/>}\n            \n            \n          </Row>\n\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Next extends Component {\n  render() {\n    return(\n      <div>\n      <FormattedMessage\n      id=\"NEXT.message\"\n      defaultMessage=\"NEXT PAGE\"\n      />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {Glyphicon} from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport './SearchSmall.css'\n\n\n\nexport default class Search extends Component{\n\n  filterUpdate(){\n    const val = this.myValue.value\n    this.props.filterUpdate(val)\n  }\n\n  render(){\n    return(\n      <div className=\"SmallSearch\">\n        <Col sm={1}>\n          <Glyphicon glyph=\"search\" className=\"searchicon\"/>\n        </Col>\n        <Col sm={4}>\n          <input\n            className=\"SmallSearch\"\n            id=\"search\"\n            type=\"text\"\n            ref={ (value) => {this.myValue = value}   }\n            onChange={this.filterUpdate.bind(this)}/>\n        </Col>\n      </div>\n\n\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport {Row, Grid, Col, Image } from 'react-bootstrap';\nimport SearchSmall from '../components/SearchSmall'\nimport '../components/UpdatePerson.css'\nimport './Home.css'\nimport './Teams.css'\nimport { FormattedMessage } from 'react-intl';\n\n\n\nexport default class Teams extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      teams:[],\n      teamID:'',\n      filterText:'',\n    };\n\n  }\n\n  filterUpdate(value){\n    this.setState({\n      filterText: value\n    })\n  }\n\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/teams`)\n    .then(result => result.json())\n    .then(teams => this.setState({teams}))\n    console.log(this.state.teams)\n\n  }\n\n  addDefaultSrc(ev){\n    ev.target.src = `images/teams/default.jpg`\n  }\n\n    render() {\n\n      let filteredTeams = this.state.teams.filter(\n        (team) => {\n          return team.teamName.indexOf(this.state.filterText) !== -1 || team.teamName.toLowerCase().indexOf(this.state.filterText) !== -1\n        }\n      )\n\n    return(\n      <div>\n        <Grid>\n          <Row>\n            <br/>\n            <br/>\n            <Col xs={12} sm={4}>\n            </Col>\n            <Col xs={12} sm={4}>\n              <SearchSmall\n                filterText={this.state.filterText}\n                filterUpdate={this.filterUpdate.bind(this)}\n              />\n            </Col>\n            <Col xs={12} sm={4}>\n            </Col>\n            <div className=\"buffer\"></div>\n            {filteredTeams.map(team =>\n              <Col xs={12} sm={3} key={team.team_id}>\n\n                <Link to={{\n                  pathname:`./Teaminfo/${team.teamName}`,\n                  state: ({\n                    id: team.team_id,\n\n                  }) }}>\n                  <div\n                  className=\"allTeams\">\n                    {/* <Image src={`images/teams/${team.teamName}.jpg`} circle className=\"teamimages\" /> */}\n                    <Image src={`images/teams/${team.teamName}.jpg`} circle className=\"teamimages\" onError={this.addDefaultSrc} />\n                    <h1 className=\"teamnames\">{team.teamName}</h1>\n                  </div>\n                </Link>\n              </Col>\n            )}\n              <br/>\n          </Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n","export function PostData(type, userData) {\n    let BaseURL = 'http://ballc-frontend-be.herokuapp.com/';\n\n    return new Promise((resolve, reject) =>{\n        fetch(BaseURL+type, {\n            method: 'POST',\n            mode: 'no-cors',\n            body: JSON.stringify(userData)\n          })\n          .then(response => response.text())\n          .then((res) => {\n            resolve(res);\n          })\n          .catch((error) => {\n            reject(error);\n          });\n\n\n      });\n}\n","import React,  { Component } from 'react';\nimport {Row, Grid, Col } from 'react-bootstrap';\nimport { ListGroup, ListGroupItem} from 'react-bootstrap';\nimport {Button, Input} from 'mdbreact'\nimport '../components/Teamlist.css'\nimport { FormattedMessage } from 'react-intl';\nimport { PostData } from '../PostData';\n\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      email:'',\n      admin: false,\n      password:'',\n      id:'',\n      name:'',\n      adminBinary:'',\n\n    };\n    this.onAdminCheck = this.onAdminCheck.bind(this)\n  }\n\n\n  onAdminCheck(e){\n    this.setState({admin: !this.state.admin});\n  }\n\n  onChangeUsername(event){\n    const username = event.target.value\n    this.setState({\n      name: username\n    })\n  }\n\n  onChangeEmail(event){\n    const email = event.target.value\n    this.setState({\n      email: email\n    })\n  }\n\n  checkAdmin = () =>{\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    var data = {\n      user_id: user.id,\n      password: user.password,\n      email: user.email,\n      username: user.name,\n      admin: user.admin\n    }\n    PostData('setadmin', data)\n  }\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/userslist`)\n    .then(result => result.json())\n    .then(users => this.setState({users}))\n  }\n\n  updateUser = () =>{\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    var data = {\n\n      email:user.email,\n      admin: user.admin,\n      password:user.password,\n      id:user.id,\n      username:user.name,\n    }\n\n    PostData('updateuser', data)\n  }\n  \n    render(){\n      return(\n        <Grid>\n          <div>\n            <Row>\n              <Col xs={12} sm={6}>\n                <div className=\"Teamlist\">\n                  <ListGroup>\n                    <div>\n                      {this.state.users.map(name =>\n                        <ListGroupItem\n                          className=\"listingplayer\"\n                          onClick={\n                            e => {\n                              this.setState({\n                                id: name.user_id,\n                                password: name.password,\n                                email: name.email,\n                                admin: name.admin,\n                                name: name.username\n                              });\n                            }\n                          }\n\n                          key={name.id}>\n                          {name.username}\n                        </ListGroupItem>)}\n                    </div>\n                  </ListGroup>\n                </div>\n              </Col>\n              <Col xs={12} sm={6}>\n                <p>\n                <FormattedMessage\n                id=\"USER.username\"\n                defaultMessage=\"Username:\"\n                />\n                </p>\n                <Input\n                  name=\"firstname\"\n                  value={(this.state.name ? this.state.name: '')}\n                  onChange={this.onChangeUsername.bind(this)\n                  }/>\n\n                <br/>\n                <hr/>\n                <br/>\n                <p>\n                <FormattedMessage\n                id=\"USER.email\"\n                defaultMessage=\"Email:\"\n                />\n                </p>\n                <Input\n                  name=\"firstname\"\n                  value={(this.state.email ? this.state.email: '')}\n                  onChange={this.onChangeEmail.bind(this)\n                  }/>\n\n                <br/>\n                <br/>\n                <p><input\n                  name=\"isGoing\"\n                  type=\"checkbox\"\n                  checked={this.state.admin}\n                  onChange={this.onAdminCheck} />\n                  <FormattedMessage\n                  id=\"USER.adminInput\"\n                  defaultMessage=\"Admin\"\n                  />\n                 </p>\n\n\n                <br/>\n                <br/>\n\n                <Button onClick={this.checkAdmin}>\n                <FormattedMessage\n                id=\"USER.saveUserButton\"\n                defaultMessage=\"Save user\"\n                />\n                </Button>\n                <Button className=\"formbtnDel\" color=\"primary\" >\n                <FormattedMessage\n                id=\"USER.deleteUserButton\"\n                defaultMessage=\"Delete user\"\n                />\n                </Button>\n\n\n              </Col>\n            </Row>\n          </div>\n        </Grid>\n\n      )\n    }\n  }\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Grid } from 'react-bootstrap';\nimport { FormattedMessage } from 'react-intl';\n\nimport './Home.css'\n\nexport default class Admin extends Component {\n\n  render(){\n    return(\n      <div>\n        <Grid>\n          <Row>\n            <Col xs={12} sm={3}>\n              <div className=\"buffer\">\n                <Link to=\"/\"><h1> \n                <FormattedMessage\n                id=\"ADMIN.teamTitle\"\n                defaultMessage=\"TEAMS\"\n                />\n                </h1></Link>\n              </div>\n            </Col>\n\n            <Col xs={12} sm={3}>\n              <div className=\"buffer\">\n                <Link to=\"/\"><h1> \n                <FormattedMessage\n                id=\"ADMIN.peopleTitle\"\n                defaultMessage=\"PEOPLE\"\n                />\n                 </h1></Link>\n              </div>\n            </Col>\n\n\n            <Col xs={12} sm={3}>\n              <div className=\"buffer\">\n                <Link to=\"/\"><h1>\n                <FormattedMessage\n                id=\"ADMIN.usersTitle\"\n                defaultMessage=\"USERS\"\n                />\n                 </h1></Link>\n              </div>\n            </Col>\n\n            <Col xs={12} sm={3}>\n              <div className=\"buffer\">\n                <Link to=\"/\"><h1>\n                <FormattedMessage\n                id=\"ADMIN.rolesTitle\"\n                defaultMessage=\"ROLES\"\n                />\n                </h1></Link>\n              </div>\n            </Col>\n\n            <Col xs={12} sm={3}>\n              <div className=\"buffer\">\n                <Link to=\"/\"><h1> \n                <FormattedMessage\n                id=\"ADMIN.seasonsTitle\"\n                defaultMessage=\"SEASONS\"\n                />\n                </h1></Link>\n              </div>\n            </Col>\n\n            <Col xs={12} sm={3}>\n              <div className=\"buffer\">\n                <Link to=\"/\"><h1>\n                <FormattedMessage\n                id=\"ADMIN.matchesTitle\"\n                defaultMessage=\"MATCHES\"\n                />\n                </h1></Link>\n              </div>\n            </Col>\n\n            <Col xs={12} sm={3}>\n              <div className=\"buffer\">\n                <Link to=\"/\"><h1> \n                <FormattedMessage\n                id=\"ADMIN.associationsTitle\"\n                defaultMessage=\"ASSOCIATIONS\"\n                />\n                </h1></Link>\n              </div>\n            </Col>\n\n            <Col xs={12} sm={3}>\n              <div className=\"buffer\">\n                <Link to=\"/\"><h1>\n                <FormattedMessage\n                id=\"ADMIN.locationsTitle\"\n                defaultMessage=\"LOCATIONS\"\n                />\n                </h1></Link>\n              </div>\n            </Col>\n\n            <Col xs={12} sm={3}>\n              <div className=\"buffer\">\n                <Link to=\"/\"><h1>\n                <FormattedMessage\n                id=\"ADMIN.addressesTitle\"\n                defaultMessage=\"ADDRESSES\"\n                />\n                </h1></Link>\n              </div>\n            </Col>\n          </Row>\n        </Grid>\n\n\n      </div>\n      )\n    }\n  }\n","import React, { Component } from 'react';\nimport { Input, Button } from 'mdbreact';\nimport { Col } from 'react-bootstrap';\nimport {PostData} from '../PostData';\n\n\n\nimport './CreatePerson.css'\n\nexport default class CreatePerson extends Component  {\n//REMEBER TO PUT A <ROW> INFRONT OF THE CALL, PLS\nconstructor(props){\n  super(props);\n  this.state={\n    firstname:'',\n    lastname:'',\n    address_1:'',\n    address_2:'',\n    address_3:'',\n    postal_code:'',\n    city:'',\n    country:'',\n    dob:'',\n    phonenumber:'',\n    email:'',\n  }\n  this.createperson = this.createperson.bind(this);\n  this.onChange = this.onChange.bind(this);\n}\n\n\ncreateperson(){\n    if(this.state.firstname && this.state.lastname && this.state.dob){\n      console.log(\"Success in creating a person\");\n      PostData('regperson', this.state)\n    }\n    else {\n      alert(\"Please fill out all the fields!\")\n    }\n  }\n\nonChange(e){\n  this.setState({[e.target.name]: e.target.value});\n  console.log(this.state);\n}\n\n  render() {\n    return(\n      <form>\n        <div className=\"grey-text\">\n          <br/>\n          <Col sm={1}>\n            <p className=\"RedStar\">*</p>\n          </Col>\n          <Col sm={11}>\n            <p>First name:</p>\n          </Col>\n          <Input\n            name=\"firstname\"\n            group type=\"firstname\"\n            validate error=\"wrong\"\n            success=\"right\"\n            onChange={this.onChange}/>\n\n          <Col sm={1}>\n            <p className=\"RedStar\">*</p>\n          </Col>\n          <Col sm={11}>\n            <p>Last name:</p>\n          </Col>\n          <Input\n            name=\"lastname\"\n            group type=\"lastname\"\n            validate error=\"wrong\"\n            placeholder=\"Lastname\"\n            onChange={this.onChange}\n          success=\"right\"/>\n\n\n          <Col sm={1}>\n          </Col>\n          <Col sm={11}>\n            <p>Address 1:</p>\n          </Col>\n          <Input\n            name=\"address_1\"\n            group type=\"Address\"\n            onChange={this.onChange}\n          validate/>\n\n          <Col sm={1}>\n          </Col>\n          <Col sm={11}>\n            <p>Address 2:</p>\n          </Col>\n          <Input\n            name=\"address_2\"\n            group type=\"Address\"\n            onChange={this.onChange}\n          validate/>\n\n          <Col sm={1}>\n          </Col>\n          <Col sm={11}>\n            <p>Address 3:</p>\n          </Col>\n          <Input\n            name=\"address_3\"\n            group type=\"address\"\n            onChange={this.onChange}/>\n          <Col sm={6}>\n            <p>Postal code:</p>\n            <Input\n              name=\"postal_code\"\n              group type=\"address\"\n              onChange={this.onChange}/>\n          </Col>\n          <Col sm={6}>\n            <p>City:</p>\n            <Input\n              name=\"city\"\n              group type=\"address\"\n              onChange={this.onChange}/>\n          </Col>\n\n          <Col sm={1}>\n          </Col>\n          <Col sm={11}>\n            <p>Country:</p>\n          </Col>\n          <Input\n            name=\"country\"\n            group type=\"address\"\n            onChange={this.onChange}/>\n          <Col sm={6}>\n            <p>Email:</p>\n            <Input\n              name=\"email\"\n              group type=\"contact\"\n              onChange={this.onChange}/>\n          </Col>\n          <Col sm={6}>\n            <p> Phonenumber:</p>\n            <Input\n              name=\"phonenumber\"\n              group type=\"contact\"\n              onChange={this.onChange}/>\n          </Col>\n\n          <Col sm={1}>\n            <p className=\"RedStar\">*</p>\n          </Col>\n          <Col sm={11}>\n            <p>Date of Birth (DD/MM/YY:)</p>\n          </Col>             <Input\n            name=\"dob\"\n            group type=\"dob\"\n            onChange={this.onChange}/>\n\n        </div>\n\n        <Col sm={1}>\n          <p className=\"RedStar\">*</p>\n        </Col>\n        <Col sm={11}>\n          <h1 className=\"h5\">Red stars are required fields</h1>\n        </Col>\n        <br/>\n        <br/>\n        <div className=\"text-center\">\n          <Button color=\"primary\" onClick={this.createperson} >Create person</Button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React, { Component } from 'react';\nimport {Glyphicon} from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\n\n\n\nexport default class Search extends Component{\n\n  filterUpdate(){\n    const val = this.myValue.value\n    this.props.filterUpdate(val)\n  }\n\n  render(){\n    return(\n      <div>\n        <Col sm={1}>\n          <Glyphicon glyph=\"search\" className=\"searchicon\"/>\n        </Col>\n        <Col sm={11}>\n          <input\n            className=\"search\"\n            id=\"search\"\n            type=\"text\"\n            ref={ (value) => {this.myValue = value}   }\n            onChange={this.filterUpdate.bind(this)}/>\n        </Col>\n      </div>\n\n\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Row, Grid, Col} from 'react-bootstrap';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport { ListGroup, ListGroupItem} from 'react-bootstrap';\nimport { Input, Button } from 'mdbreact';\nimport CreatePerson from '../components/CreatePerson';\nimport Search from '../components/Search'\nimport '../components/UpdatePerson.css'\nimport './Home.css';\nimport {PostData} from '../PostData';\nimport { FormattedMessage } from 'react-intl';\n\nimport '../components/Teamlist.css'\n\nimport './Home.css'\n\nexport default class Person extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: 1,\n      persons:[],\n      address:[],\n      contact:[],\n      contactID:[],\n      filterText:'',\n      contactToChange: null,\n      personToEdit: null,\n\n      contact_id:'',\n      location:'',\n      address_id:'',\n      person_id:'',\n      firstname: '',\n      lastname: '',\n      address_1:null,\n      address_2:null,\n      address_3:null,\n      postal:'',\n      city:'',\n      country:'',\n      contact_type:'',\n      contact_detail:'',\n      dob:''\n\n    };\n\n    this.onChangeFName = this.onChangeFName.bind(this)\n    this.onChangeLName = this.onChangeLName.bind(this)\n    this.onChangeA1 = this.onChangeA1.bind(this)\n    this.onChangeA2 = this.onChangeA2.bind(this)\n    this.onChangeA3 = this.onChangeA3.bind(this)\n    this.onChangePostal = this.onChangePostal.bind(this)\n    this.onChangeCity = this.onChangeCity.bind(this)\n    this.onChangeCountry = this.onChangeCountry.bind(this)\n    this.onChangeDOB = this.onChangeDOB.bind(this)\n    this.onChangeContactDetail = this.onChangeContactDetail.bind(this)\n    this.onChangeContactType = this.onChangeContactType.bind(this)\n  }\n\n  filterUpdate(value){\n    this.setState({\n      filterText: value\n    })\n  }\n\n  onChangeFName(event){\n    const firstnameinput = event.target.value\n    this.setState({\n      firstname: firstnameinput\n    })\n  }\n\n  onChangeLName(event){\n    const lastnameinput = event.target.value\n    this.setState({\n      lastname: lastnameinput\n    })\n  }\n\n  onChangeA1(event){\n    const address1input = event.target.value\n    this.setState({\n      address_1: address1input\n    })\n  }\n\n  onChangeA2(event){\n    const address2input = event.target.value\n    this.setState({\n      address_2: address2input\n    })\n  }\n\n  onChangeA3(event){\n    const address3input = event.target.value\n    this.setState({\n      address_3: address3input\n    })\n  }\n\n  onChangePostal(event){\n    const postalinput = event.target.value\n    this.setState({\n      postal: postalinput\n    })\n  }\n\n  onChangeCity(event){\n    const cityinput = event.target.value\n    this.setState({\n      city: cityinput\n    })\n  }\n\n  onChangeCountry(event){\n    const countryinput = event.target.value\n    this.setState({\n      country: countryinput\n    })\n  }\n\n  onChangeDOB(event){\n    const DOBinput = event.target.value\n    this.setState({\n      dob: DOBinput\n    })\n  }\n\n  onChangeContactType(event){\n    const contacttypeinput = event.target.value\n    this.setState({\n      contact_type: contacttypeinput\n    })\n  }\n\n  onChangeContactDetail(event){\n    const contactdetailinput = event.target.value\n    this.setState({\n      contact_detail: contactdetailinput\n    })\n  }\n\n  componentDidMount() {\n    fetch(`http://ballc-frontend-be.herokuapp.com/persons`)\n    .then(result => result.json())\n    .then(persons => this.setState({persons}))\n\n   fetch(`http://ballc-frontend-be.herokuapp.com/contacts`)\n    .then(result => result.json())\n    .then(contact => this.setState({contact}))\n\n  }\n\n\n  updatePerson = () =>{\n\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    /*\n      firstname: '',\n      lastname: '',\n      address_1:'',\n      address_2:'',\n      address_3:'',\n      postal:'',\n      city:'',\n      country:'',\n      contact_type:'',\n      contact_detail:'',\n      dob:''\n    */\n    var data = {\n      address: user.address_id,\n      person_id:user.person_id,\n      first_name: user.firstname,\n      last_name: user.lastname,\n      date_of_birth: user.dob\n\n    }\n    PostData('updateperson', data);\n    var data2 = {\n      location: user.location,\n      address_id: user.address_id,\n      address_line_1: user.address_1,\n      address_line_2: user.address_2,\n      address_line_3: user.address_3,\n      postal_code: user.postal,\n      city: user.city,\n      country: user.country\n    }\n    PostData('updateaddress', data2);\n\n\n  }\n\n  delPerson = () => {\n\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    var data5 = {\n      address_id: user.address_id,\n      person_id: user.person_id\n    }\n    PostData('delperson', data5);\n\n    fetch(`http://ballc-frontend-be.herokuapp.com/userslist`)\n    .then(result => {\n     console.log(result.text())\n    })\n  }\n\n  updateContact = () => {\n\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n\n    var data3 = {\n      person: user.person_id,\n      contact_id: user.contact_id,\n      contact_type: user.contact_type,\n      contact_detail: user.contact_detail,\n    }\n\n    console.log(data3);\n    PostData('updatecontact', data3);\n  }\n\n  addContact = () => {\n\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    var data4 = {\n      person: user.person_id,\n      contact_type: user.contact_type,\n      contact_detail: user.contact_detail,\n    }\n\n    PostData('addcontact', data4);\n  }\n\n  delContact = () => {\n\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    var data4 = {\n      person: user.person_id,\n      contact_id: user.contact_id,\n      contact_type: user.contact_type,\n      contact_detail: user.contact_detail,\n    }\n\n    PostData('delcontact', data4);\n  }\n\n    render() {\n      let filteredNames = this.state.persons.filter(\n        (name) => {\n          return name.first_name.indexOf(this.state.filterText) !== -1 || name.last_name.indexOf(this.state.filterText) !== -1\n        }\n      )\n      let filteredContacts = []\n\n    if(this.state.contactID.length !== 0  ){\n       filteredContacts = this.state.contact.filter(\n        (contact) => {\n          return this.state.contactID.indexOf(contact.contact_id) !== -1\n        }\n      )\n    }\n\n    return(\n      <div>\n        <Grid>\n          <Row>\n            <Col xs={12} sm={6}>\n              <p className=\"h5 text-center mb-4\">\n              <FormattedMessage\n              id=\"PERSON.registeredTitle\"\n              defaultMessage=\"REGISTERED PEOPLE\"\n              />\n              </p>\n              <br/>\n              <div className=\"Teamlist\">\n                <ListGroup>\n                  <div>\n                    {filteredNames.map(name =>\n                      <ListGroupItem\n                        className=\"listingplayer\"\n                        onClick={\n                          e => {\n                            this.setState({\n\n                              address_id: name.address_id,\n                              person_id: name.person_id,\n                              firstname: name.first_name,\n                              lastname: name.last_name,\n                              dob:name.date_of_birth,\n                              personToEdit: name,\n                              contactID: name.contacts,\n                            });\n\n                            fetch(`https://ballc-frontend-be.herokuapp.com/address/${name.address}`)\n                            .then(result => result.json())\n                            .then(address => this.setState({\n                              address,\n                              location: address.location,\n                              address_id: address.address_id,\n                              address_1: address.address_line_1,\n                              address_2: address.address_line_2,\n                              address_3: address.address_line_3,\n                              postal: address.postal_code,\n                              city: address.city,\n                              country: address.country\n                            }))\n                          }\n                        }\n\n                        key={name.person_id}>\n                        {name.first_name} {name.last_name}\n                      </ListGroupItem>)}\n                  </div>\n                </ListGroup>\n              </div>\n              <br/>\n              <Search\n                filterText={this.state.filterText}\n                filterUpdate={this.filterUpdate.bind(this)}\n              />\n            </Col>\n            <Col xs={12} sm={6}>\n              <Tabs defaultActiveKey={this.state.key} id=\"uncontrolled-tab-example\">\n                <Tab eventKey={1} title={\n                  <FormattedMessage\n                  id=\"PERSON.editPersonTab\"\n                  defaultMessage=\"Edit Person\"\n                  />\n                }>\n                  <form>\n                    <div className=\"grey-text\">\n                      <br/>\n\n                      <p>\n                      <FormattedMessage\n                      id=\"PERSON.firstName\"\n                      defaultMessage=\"First name:\"\n                      />\n                      </p>\n                      <Input\n                        name=\"firstname\"\n                        value={(this.state.personToEdit ? this.state.firstname : '')}\n                        onChange={this.onChangeFName\n                        }/>\n\n                      <p>\n                      <FormattedMessage\n                      id=\"PERSON.lastName\"\n                      defaultMessage=\"Last name:\"\n                      />\n                      </p>\n                      <Input\n                        name=\"last_name\"\n                        value={(this.state.personToEdit ? this.state.lastname : '')}\n                        onChange={this.onChangeLName\n                        }/>\n\n\n                      <p>\n                      <FormattedMessage\n                      id=\"PERSON.address1\"\n                      defaultMessage=\"Address 1:\"\n                      />\n                      </p>\n                      <Input\n                        name=\"address_1\"\n                        value={(this.state.address ? this.state.address_1 : '')}\n                        onChange={this.onChangeA1}\n                      validate/>\n\n                      <p><FormattedMessage\n                      id=\"PERSON.address2\"\n                      defaultMessage=\"Address 2:\"\n                      /></p>\n                      <Input\n                        name=\"address_2\"\n                        value={(this.state.address ? this.address_2 : '' )}\n                        onChange={this.onChangeA2}\n                      validate/>\n\n                      <p>\n                      <FormattedMessage\n                      id=\"PERSON.address3\"\n                      defaultMessage=\"Address 3:\"\n                      />\n                      </p>\n                      <Input\n                        name=\"address_3\"\n                        value={(this.state.address ? this.state.address_3 : '')}\n                        onChange={this.onChangeA3}/>\n                      <Col sm={6}>\n                        <p>\n                        <FormattedMessage\n                        id=\"PERSON.postalCode\"\n                        defaultMessage=\"Postal code:\"\n                        />\n                        </p>\n                        <Input\n                          name=\"postal\"\n                          value={(this.state.address ? this.state.postal_code : '')}\n                          onChange={this.onChangePostal}/>\n                      </Col>\n                      <Col sm={6}>\n                        <p>\n                        <FormattedMessage\n                        id=\"PERSON.city\"\n                        defaultMessage=\"City:\"\n                        />\n                        </p>\n                        <Input\n                          name=\"city\"\n                          value={(this.state.address ? this.state.city : '')}\n                          onChange={this.onChangeCity}/>\n                      </Col>\n\n                      <p>\n                      <FormattedMessage\n                      id=\"PERSON.country\"\n                      defaultMessage=\"Country:\"\n                      />\n                      </p>\n                      <Input\n                        name=\"country\"\n                        value={(this.state.address ? this.state.country : '')}\n                        onChange={this.onChangeCountry}/>\n\n\n                      <br/>\n\n                      <p>\n                      <FormattedMessage\n                      id=\"PERSON.availableContactMessage\"\n                      defaultMessage=\"Available contacts:  (Click to edit)\"\n                      />\n                      </p>\n\n                      <div className=\"ContactList\">\n                        <ListGroup>\n                          <div>\n                            {filteredContacts.map(contact =>\n                              <ListGroupItem\n                                className=\"listingplayer\"\n                                onClick={\n                                  e =>\n                                  this.setState({\n                                    contactToChange: contact,\n                                    contact_id: contact.contact_id,\n                                    contact_type:contact.contact_type,\n                                    contact_detail:contact.contact_detail,\n                                  })\n                                }\n                                key={contact.contact_id}>\n                                {contact.contact_type}{':'} {contact.contact_detail}\n                              </ListGroupItem>)}\n                          </div>\n                        </ListGroup>\n                      </div>\n\n\n                      <Col sm={6}>\n                        <p>\n                        <FormattedMessage\n                        id=\"PERSON.type\"\n                        defaultMessage=\"Type:\"\n                        />\n                        </p>\n                        <Input\n                          name=\"phone\"\n                          value={(this.state.contactToChange ? this.state.contact_type : '')}\n                          onChange={this.onChangeContactType\n                          }\n                        />\n\n                      </Col>\n                      <Col sm={6}>\n                        <p>\n                        <FormattedMessage\n                        id=\"PERSON.contact\"\n                        defaultMessage=\"Contact:\"\n                        />\n                        </p>\n                        <Input\n                          name=\"phone\"\n                          value={(this.state.contactToChange ? this.state.contact_detail : '')}\n                          onChange={this.onChangeContactDetail}/>\n                      </Col>\n                      <div className=\"text-center\">\n                        <Button className=\"formbtnSave\" color=\"primary\" onClick={this.addContact} >\n                        <FormattedMessage\n                        id=\"PERSON.addButton\"\n                        defaultMessage=\"Add\"\n                        />\n                        </Button>\n                        <Button className=\"formbtnSave\" color=\"primary\" onClick={this.updateContact} >\n                        <FormattedMessage\n                        id=\"PERSON.saveButton\"\n                        defaultMessage=\"Save\"\n                        />\n                        </Button>\n                        <Button className=\"formbtnDel\" color=\"primary\" onClick={this.delContact} >\n                        <FormattedMessage\n                        id=\"PERSON.delButton\"\n                        defaultMessage=\"Del\"\n                        />\n                        </Button>\n                      </div>\n                      <p>\n                      <FormattedMessage\n                        id=\"PERSON.dateOfBirth\"\n                        defaultMessage=\"Date of Birth\"\n                        />\n                      </p>\n                      <Input\n                        name=\"username\"\n                        type=\"date\"\n                        value={(this.state.personToEdit ? this.state.dob : '')}\n                        onChange={this.onChangeDOB}/>\n\n                    </div>\n\n                    <div className=\"text-center\">\n                      <Button className=\"formbtnSave\" color=\"primary\" onClick={this.updatePerson} >\n                      <FormattedMessage\n                        id=\"PERSON.saveEditButton\"\n                        defaultMessage=\"Save edit\"\n                        />\n                        </Button>\n                      <Button className=\"formbtnDel\" color=\"primary\" onClick={this.delPerson} >\n                      <FormattedMessage\n                        id=\"PERSON.deletePersonButton\"\n                        defaultMessage=\"Delete person\"\n                        />\n                        </Button>\n\n                    </div>\n                  </form>\n                </Tab>\n                <Tab eventKey={2} title={\n                  <FormattedMessage\n                  id=\"PERSON.newPersonTab\"\n                  defaultMessage=\"New Person\"\n                  />\n                }>\n                  <CreatePerson />\n                </Tab>\n              </Tabs>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Row, Grid, Col } from 'react-bootstrap';\nimport { ListGroup, ListGroupItem} from 'react-bootstrap';\nimport { Input, Button } from 'mdbreact';\nimport SearchSmall from '../components/SearchSmall'\nimport '../components/UpdatePerson.css'\nimport './Home.css'\nimport { FormattedMessage } from 'react-intl';\n\nimport {PostData} from '../PostData';\n\n\n\nexport default class Team extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teams:[],\n      selectTeam:[],\n      associations:[],\n      locations:[],\n      coaches:[],\n      owners:[],\n      persons:[],\n      ownerNames:[],\n      selectedAssociation:'',\n      selectedCoach:'',\n      selectedLocation:'',\n      selectedOwner:'',\n      selectedTeamName:'',\n      association_id :'',\n      location_id: '',\n      coach_id : '',\n      owner_id: '',\n      team_id:''\n    };\n\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeAssociation = this.onChangeAssociation.bind(this)\n    this.onChangeLocation = this.onChangeLocation.bind(this);\n    this.onChangeCoach = this.onChangeCoach.bind(this);\n    this.onChangeOwner = this.onChangeOwner.bind(this);\n  }\n  componentDidMount() {\n    fetch(`http://ballc-frontend-be.herokuapp.com/teams`)\n    .then(result => result.json())\n    .then(teams => this.setState({teams}))\n\n    fetch(`http://ballc-frontend-be.herokuapp.com/associations`)\n    .then(result => result.json())\n    .then(associations => this.setState({associations}))\n\n    fetch(`http://ballc-frontend-be.herokuapp.com/locations`)\n    .then(result => result.json())\n    .then(locations => this.setState({locations}))\n\n    fetch(`http://ballc-frontend-be.herokuapp.com/coaches`)\n    .then(result => result.json())\n    .then(coaches => this.setState({coaches}))\n\n    fetch(`http://ballc-frontend-be.herokuapp.com/owners`)\n    .then(result => result.json())\n    .then(owners => this.setState({owners}))\n\n    fetch(`http://ballc-frontend-be.herokuapp.com/persons`)\n    .then(result => result.json())\n    .then(persons => this.setState({persons}))\n  }\n\n  onChangeName(event){\n    const teamNameInput = event.target.value\n    this.setState({\n      selectedTeamName: teamNameInput\n    })\n  }\n\n  getTeamAssociation(id) {\n    var teamAssociationName = '';\n    this.state.associations.forEach(association => {\n      if(association.association_id === id) {\n        teamAssociationName = association.name;\n      }\n    })\n    return teamAssociationName;\n  }\n\n  getTeamLocation(id) {\n    var teamLocationName = '';\n    this.state.locations.forEach(location => {\n      if(location.location_id === id) {\n        teamLocationName = location.name;\n      }\n    })\n    return teamLocationName;\n  }\n\n  getTeamCoach(id) {\n    var teamCoachName = '';\n    this.state.coaches.forEach(coach => {\n      if(coach.coach_id === id) {\n        this.state.persons.forEach(person => {\n          if(person.person_id === coach.person) {\n            teamCoachName = person.first_name + ' ' + person.last_name;\n          }\n        })\n      }\n    })\n    return teamCoachName;\n  }\n\n  getTeamOwner(id) {\n    var teamOwnerName = '';\n    this.state.owners.forEach(owner => {\n      if(owner.owner_id === id) {\n        this.state.persons.forEach(person => {\n          if(person.person_id === owner.person) {\n            teamOwnerName = person.first_name + ' ' + person.last_name;\n          }\n        })\n      }\n    })\n    return teamOwnerName;\n  }\n\n  getPersonName(id) {\n    var personName = '';\n    this.state.persons.forEach(person => {\n      if(person.person_id === id) {\n        personName = person.first_name + ' ' + person.last_name;\n      }\n    })\n    return personName;\n  }\n\n  onChangeAssociation(event){\n      const associationinput = event.target.value\n      this.setState({\n        selectedAssociation: associationinput\n      })\n  }\n  onChangeLocation(event){\n    const locationinput = event.target.value\n    this.setState({\n      selectedLocation: locationinput\n    })\n  }\n  onChangeCoach(event){\n    const coachinput = event.target.value\n    this.setState({\n      selectedCoach: coachinput\n    })\n  }\n  onChangeOwner(event){\n    const ownerinput = event.target.value\n    this.setState({\n      selectedOwner: ownerinput\n    })\n  }\n\n\n\n\naddTeam = () =>{\n  let user = Object.assign({}, this.state);    //creating copy of object\n\n  var data = {\n    teamName : user.selectedTeamName,\n    association : user.association_id,\n    location : user.location_id,\n    coach : user.coach_id,\n    owner : user.owner_id\n  }\n\n  PostData('addteam', data);\n}\n\nupdateTeam = () =>{\n  let user = Object.assign({}, this.state);    //creating copy of object\n\n  var data = {\n    teamName : user.selectedTeamName,\n    association : user.association_id,\n    location : user.location_id,\n    coach : user.coach_id,\n    owner : user.owner_id,\n    team_id: user.team_id\n  }\n\n  PostData('updateteam', data);\n}\n\ndelTeam = () =>{\n  let user = Object.assign({}, this.state);    //creating copy of object\n\n  var data = {\n    team_id: user.team_id\n  }\n\n  PostData('delteam', data);\n}\n\n\n  render(){\n    return(\n      <div>\n        <Grid>\n          <Row>\n            <Col xs={12} sm={4}>\n              <div className=\"Teamlist\">\n                <ListGroup>\n                  <div>\n                    {this.state.teams.map(team =>\n                      <ListGroupItem\n                        className=\"listingplayer\"\n                        onClick={\n                          e => {\n                            this.setState({\n                                selectTeam: team,\n                                selectedTeamName: team.teamName,\n                                team_id: team.team_id,\n                                association_id: team.association,\n                                location_id: team.location,\n                                coach_id: team.coach,\n                                owner_id: team.owner,\n                              selectedAssociation: this.getTeamAssociation(team.association),\n                              selectedLocation: this.getTeamLocation(team.location),\n                              selectedCoach: this.getTeamCoach(team.coach),\n                              selectedOwner: this.getTeamOwner(team.owner)\n                            });\n                          }\n\n                        }\n                        \n                        key={team.team_id}>\n                        {team.teamName}\n                      </ListGroupItem>)}\n                  </div>\n                </ListGroup>\n              </div>\n\n            </Col>\n            <Col xs={12} sm={4}>\n\n              <br/>\n\n              <p className=\"h5 text-center mb-4\">\n              <FormattedMessage\n              id=\"TEAM.editCreateTeamTitle\"\n              defaultMessage=\"EDIT/CREATE TEAMS\"\n              />\n              </p>\n              <form>\n                <div className=\"grey-text\">\n                  <br/>\n                  <p>\n                  <FormattedMessage\n                  id=\"TEAM.teamName\"\n                  defaultMessage=\"Team name:\"\n                  />\n                  </p>\n                  <Input\n                      name=\"Team Name\"\n                      value={this.state.selectedTeamName ? this.state.selectedTeamName : ''}\n                      onChange={this.onChangeName.bind(this)}/>\n                </div>\n                <br/>\n                <hr/>\n                <br/>\n                <div className=\"grey-text\">\n                  <br/>\n                  <p>\n                  <FormattedMessage\n                  id=\"TEAM.association\"\n                  defaultMessage=\"Association:\"\n                  />\n                  </p>\n                  <Input\n                      name=\"Association\"\n                      value={(this.state.selectedAssociation ? this.state.selectedAssociation : '')}\n                      onChange={this.onChangeAssociation\n                      }/>\n                </div>\n                <br/>\n                <hr/>\n                <br/>\n                <div className=\"grey-text\">\n                  <br/>\n                  <p>\n                  <FormattedMessage\n                  id=\"TEAM.location\"\n                  defaultMessage=\"Location:\"\n                  />\n                  </p>\n                  <Input\n                      name=\"Location\"\n                      value={(this.state.selectedLocation ? this.state.selectedLocation : '')}\n                      onChange={this.onChangeLocation\n                      }/>\n                </div>\n                <br/>\n                <hr/>\n                <br/>\n                <div className=\"grey-text\">\n                  <br/>\n                  <p>\n                  <FormattedMessage\n                  id=\"TEAM.coach\"\n                  defaultMessage=\"Coach:\"\n                  />\n                  </p>\n                  <Input\n                      name=\"Coach\"\n                      value={(this.state.selectedCoach ? this.state.selectedCoach : '')}\n                      onChange={this.onChangeCoach\n                      }/>\n                </div>\n                <br/>\n                <hr/>\n                <br/>\n                <div className=\"grey-text\">\n                  <br/>\n                  <p>\n                  <FormattedMessage\n                  id=\"TEAM.owner\"\n                  defaultMessage=\"Owner:\"\n                  />\n                  </p>\n                  <Input\n                      name=\"Owner\"\n                      value={(this.state.selectedOwner ? this.state.selectedOwner : '')}\n                      onChange={this.onChangeOwner\n                      }/>\n                </div>\n\n\n              </form>\n\n            </Col>\n            <Col xs={12} sm={4}>\n              <br/>\n\n              <p className=\"h5 text-center mb-4\">\n              <FormattedMessage\n              id=\"TEAM.registeredAssTitle\"\n              defaultMessage=\"REGISTERED ASSOCIATIONS\"\n              />\n              </p>\n              <div className=\"divlist\">\n              <ListGroup>\n                      <div>\n                        {this.state.associations.map(association =>\n                          <ListGroupItem\n                            className=\"listingplayer\"\n                            onClick={\n                              e => {\n                                this.setState({\n                                  selectedAssociation:association.name,\n                                  association_id : association.association_id\n                                });\n                              }\n                            }\n                            key={association.association_id}>\n                            {association.name}\n                          </ListGroupItem>)}\n                      </div>\n                </ListGroup>\n              </div>\n              <br/>\n\n              <p className=\"h5 text-center mb-4\">\n              <FormattedMessage\n              id=\"TEAM.registeredLocationTitle\"\n              defaultMessage=\"REGISTERED LOCATIONS\"\n              />\n              </p>\n              <div className=\"divlist\">\n                <ListGroup>\n                    <div>\n                        {this.state.locations.map(location =>\n                          <ListGroupItem\n                            className=\"listingplayer\"\n                            onClick={\n                              e => {\n                                this.setState({\n                                  selectedLocation:location.name,\n                                  location_id: location.location_id\n                                });\n                              }\n                            }\n                            key={location.location_id}>\n                            {location.name}\n                          </ListGroupItem>)}\n                      </div>\n                </ListGroup>\n              </div>\n              <br/>\n\n              <p className=\"h5 text-center mb-4\">\n              <FormattedMessage\n              id=\"TEAM.registeredCoachesTitle\"\n              defaultMessage=\"REGISTERED COACHES\"\n              />\n              </p>\n              <div className=\"divlist\">\n              <ListGroup>\n                      <div>\n                        {this.state.coaches.map(coach =>\n                          <ListGroupItem\n                            className=\"listingplayer\"\n                            onClick={\n                              e => {\n                                this.setState({\n                                  selectedCoach:this.getPersonName(coach.person),\n                                  coach_id : coach.coach_id\n                                });\n                              }\n                            }\n                            key={coach.coach_id}>\n                            {this.getPersonName(coach.person)}\n                          </ListGroupItem>)}\n                      </div>\n                </ListGroup>\n              </div>\n              <br/>\n\n              <p className=\"h5 text-center mb-4\">\n              <FormattedMessage\n              id=\"TEAM.registeredOwnerTitle\"\n              defaultMessage=\"REGISTERED OWNERS\"\n              />\n              </p>\n              <div className=\"divlist\">\n              <ListGroup>\n                      <div>\n                        {this.state.owners.map(owner =>\n                          <ListGroupItem\n                            className=\"listingplayer\"\n                            onClick={\n                              e => {\n                                this.setState({\n                                  selectedOwner:this.getPersonName(owner.person),\n                                  owner_id: owner.owner_id\n                                });\n                              }\n                            }\n                            key={owner.owner_id}>\n                            {this.getPersonName(owner.person)}\n                          </ListGroupItem>)}\n                      </div>\n                </ListGroup>\n              </div>\n              <div className=\"text-center\">\n\n                <Button className=\"formbtnSave\" color=\"primary\" onClick={this.updateTeam}>\n                <FormattedMessage\n                id=\"TEAM.saveButton\"\n                defaultMessage=\"Save\"\n                />\n                 </Button>\n                <Button className=\"formbtnSave\" color=\"primary\" onClick={this.addTeam}>\n                <FormattedMessage\n                id=\"TEAM.createButton\"\n                defaultMessage=\"Create\"\n                />\n                 </Button>\n                <Button className=\"formbtnDel\" color=\"primary\" onClick={this.delTeam}>\n                <FormattedMessage\n                id=\"TEAM.deleteButton\"\n                defaultMessage=\"Delete\"\n                />\n                 </Button>\n              </div>\n\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n\n\n\n    )\n  }\n}\n","import React, { Component} from 'react';\nimport {Col} from 'react-bootstrap'\nimport './Teams.css'\nimport { FormattedMessage } from 'react-intl';\n\n\nexport default class Association extends Component{\n    constructor(props) {\n      super(props);\n      this.state = {\n        associations:[],\n        association: this.props.association,\n      };\n\n    }\n    componentWillReceiveProps(nextprop) {\n      fetch(`https://ballc-frontend-be.herokuapp.com/association/${nextprop.association}`)\n      .then(result => result.json())\n      .then(associations => this.setState({associations}))\n    }\n\n    render() {\n\n\n      return (\n          <div>\n            <Col xs={12} sm={3}>\n              <h1>\n              <FormattedMessage\n                id=\"ASSOCIATION.assTitle\"\n                defaultMessage=\"Association\"\n                />\n                </h1>\n              <hr/>\n              <div className=\"infoName\">\n                <h2>{this.state.associations.name}</h2>\n              </div>\n\n              <p>{this.state.associations.description}</p>\n            </Col>\n          </div>\n          );\n          }\n\n          }\n","import React, { Component} from 'react';\nimport './Teams.css'\nimport { FormattedMessage } from 'react-intl';\n\n\nexport default class Coach extends Component{\n    constructor(props) {\n      super(props);\n      this.state = {\n        people:[],\n        person: this.props.person,\n      };\n\n    }\n    componentWillReceiveProps(nextprop) {\n      fetch(`https://ballc-backend-api.herokuapp.com/persons/${nextprop.person}`)\n      .then(result => result.json())\n      .then(people => this.setState({people}))\n    }\n\n    render() {\n\n\n      return (\n          <div>\n            <div className=\"infoName\">\n              <h2>{this.state.people.first_name} {this.state.people.last_name}</h2>\n            </div>\n            <p type=\"date\">{this.state.people.date_of_birth}</p>\n          </div>\n          );\n          }\n\n          }\n","import React, { Component} from 'react';\nimport {Col} from 'react-bootstrap'\nimport PersonInfo from './PersonInfo'\nimport './Teams.css'\nimport { FormattedMessage } from 'react-intl';\n\n\n\nexport default class Owner extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      owners:[],\n      owner: this.props.owner,\n    };\n\n  }\n  componentWillReceiveProps(nextprop) {\n    fetch(`https://ballc-frontend-be.herokuapp.com/owner/${nextprop.owner}`)\n    .then(result => result.json())\n    .then(owners => this.setState({owners}))\n  }\n\n\n  render(){\n    return(\n      <Col xs={12} sm={3}>\n        <h1>\n        <FormattedMessage\n        id=\"OWNER.message\"\n        defaultMessage=\"Owner\"\n        />\n        </h1>\n        <hr/>\n\n        <PersonInfo person={this.state.owners.person}/>\n      </Col>\n        )\n  }\n}\n","import React, { Component} from 'react';\nimport {Col} from 'react-bootstrap'\nimport './Teams.css'\nimport { FormattedMessage } from 'react-intl';\n\n\nexport default class Location extends Component{\n    constructor(props) {\n      super(props);\n      this.state = {\n        locations:[],\n        location: this.props.location,\n      };\n\n    }\n    componentWillReceiveProps(nextprop) {\n      fetch(`https://ballc-frontend-be.herokuapp.com/location/${nextprop.location}`)\n      .then(result => result.json())\n      .then(locations => this.setState({locations}))\n    }\n\n    render() {\n\n\n      return (\n          <div>\n            <Col xs={12} sm={3}>\n              <h1>\n              <FormattedMessage\n                id=\"LOCATION.locationTitle\"\n                defaultMessage=\"Location\"\n              />\n              </h1>\n              <hr/>\n              <div className=\"infoName\">\n                <h2>{this.state.locations.name}</h2>\n              </div>\n              <p>{this.state.locations.description}</p>\n            </Col>\n          </div>\n          );\n          }\n\n          }\n","import React, { Component} from 'react';\nimport {Col} from 'react-bootstrap'\nimport PersonInfo from './PersonInfo'\nimport './Teams.css'\nimport { FormattedMessage } from 'react-intl';\n\n\nexport default class Coach extends Component{\n    constructor(props) {\n      super(props);\n      this.state = {\n        coaches:[],\n        coach: this.props.coach,\n      };\n\n    }\n    componentWillReceiveProps(nextprop) {\n      fetch(`https://ballc-frontend-be.herokuapp.com/coach/${nextprop.coach}`)\n      .then(result => result.json())\n      .then(coaches => this.setState({coaches}))\n    }\n\n    render() {\n\n\n      return (\n          <div>\n            <Col xs={12} sm={3}>\n              <h1>\n              <FormattedMessage\n                id=\"COACH.coachTitle\"\n                defaultMessage=\"Coach\"\n                />\n                </h1>\n              <hr/>\n\n\n              <PersonInfo person={this.state.coaches.person}/>\n\n            </Col>\n          </div>\n          );\n          }\n\n          }\n","import React, { Component} from 'react';\nimport Association from './Association';\nimport Owner from './Owner';\nimport Location from './Location';\nimport Coach from './Coach';\nimport './Teams.css'\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { Row, Grid, Col} from 'react-bootstrap'\n\n\nexport default class Teaminfo extends Component{\n    constructor(props) {\n      super(props);\n      this.state = {\n        players:[],\n        playersInTeam:[],\n        team:[],\n        teams:[],\n        teamID: props.location.state.id,\n      };\n      console.log('Teams is:', this.state.teamID)\n\n\n    }\n    componentDidMount() {\n      fetch(`https://ballc-frontend-be.herokuapp.com/team/${this.state.teamID}`)\n      .then(result => result.json())\n      .then(team => this.setState({team,\n      playersInTeam: team.players}))\n\n      fetch(`https://ballc-backend-api.herokuapp.com/players/team/${this.state.teamID}`)\n      .then(result => result.json())\n      .then(players => this.setState({players}))\n    }\n\n\n    render() {\n\n      return (\n        <div>\n          <Grid>\n            <Row>\n              <h1>{this.state.team.teamName}</h1>\n              <br/>\n              <br/>\n              <Association association={this.state.team.association}/>\n              <Location location={this.state.team.location}/>\n              <Owner owner={this.state.team.owner}/>\n              <Coach coach={this.state.team.coach}/>\n              <br/>\n              <br/>\n\n              <hr/>\n              <h1 className=\"playerinfo\">\n              <FormattedMessage\n              id=\"TEAMINFO.playerTitle\"\n              defaultMessage=\"Players\"\n              />\n              </h1>\n              <br/>\n              <br/>\n\n\n              {this.state.players.map(players =>\n                <Col xs={12} sm={4} key={players.person_id}>\n                  <div className=\"playerseparator\">\n\n                    <h3 className=\"greytext\">{players.normal_position}</h3>\n                    <hr/>\n                    <h3>{players.first_name} {players.last_name}</h3>\n                    <p>{players.date_of_birth}</p>\n                  </div>\n\n                  </Col>\n                  )}\n\n            </Row>\n          </Grid>\n          </div>\n\n          );\n          }\n\n  }\n","import React,  { Component } from 'react';\nimport { Row, Grid, Col, Checkbox } from 'react-bootstrap';\nimport { ListGroup, ListGroupItem, FormControl} from 'react-bootstrap';\nimport { Button, Input } from 'mdbreact'\nimport '../components/Teamlist.css'\nimport { PostData } from '../PostData';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Roles extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      persons:[],\n      teams:[],\n      selectTeam:[],\n      first_name:'',\n      last_name:'',\n      team_id:'',\n      coach: false,\n      owner:false,\n      player:false,\n      number:'',\n      person_id:'',\n      selected:'goalkeeper'\n\n\n    };\n    this.onChangeNumber = this.onChangeNumber.bind(this)\n    this.selectOption = this.selectOption.bind(this)\n\n    this.onCoachCheck = this.onCoachCheck.bind(this)\n    this.onOwnerCheck = this.onOwnerCheck.bind(this)\n  }\n  onChangeNumber(event){\n    const number = event.target.value\n    this.setState({\n      number: number\n    })\n  }\n\n  componentDidMount() {\n    fetch(`http://ballc-frontend-be.herokuapp.com/persons`)\n    .then(result => result.json())\n    .then(persons => this.setState({persons}))\n\n    fetch(`http://ballc-frontend-be.herokuapp.com/teams`)\n    .then(result => result.json())\n    .then(teams => this.setState({teams}))\n  }\n\n  onCoachCheck(e){\n    this.setState({coach: !this.state.coach});\n  }\n\n  onOwnerCheck(e){\n    this.setState({owner: !this.state.owner});\n  }\n\n  selectOption = (event) =>{\n    let selectedOp = event.target.value;\n    this.setState({selected: selectedOp});\n    console.log(selectedOp);\n  }\n\n  addRole = () =>{\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    var data = {\n      coach: user.coach,\n      owner: user.owner,\n      person_id:user.person_id,\n      team_id:user.team_id\n    }\n\n    if(this.state.number !== ''){\n      this.setState({player: true});\n      var data3 = {\n        number: user.number,\n        player: user.player,\n        selected: user.selected,\n        team: user.team_id\n      }\n      var data2 = {...data, ...data3 }\n      console.log(\"it is a player\");\n      PostData('addrole', data2);\n    }else{\n      PostData('addrole', data);\n    }\n\n\n  }\n    render(){\n      return(\n        <Grid>\n          <div>\n            <Row>\n              <Col xs={12} sm={6}>\n                <div className=\"Teamlist\">\n                  <ListGroup>\n                    <div>\n                      {this.state.persons.map(name =>\n                        <ListGroupItem\n                          className=\"listingplayer\"\n                          onClick={\n                            e => {\n                              this.setState({\n                                person_id: name.person_id,\n                                first_name: name.first_name,\n                                last_name:name.last_name,\n\n                              });\n\n                            }\n                          }\n                          key={name.person_id}>\n                          {name.first_name} {name.last_name}\n                        </ListGroupItem>)}\n                    </div>\n                  </ListGroup>\n                </div>\n              </Col>\n              <Col xs={12} sm={6}>\n                <p>\n                <FormattedMessage\n                id=\"ROLES.name\"\n                defaultMessage=\"Name:\"\n                />\n                </p>\n                <p>{(this.state.first_name ? this.state.first_name: '')} {(this.state.last_name ? this.state.last_name: '')}</p>\n\n                <br/>\n                <hr/>\n\n                <br/>\n                <br/>\n                <Checkbox onClick={this.onCoachCheck} defaultChecked={this.state.admin}>\n                  <FormattedMessage\n                  id=\"ROLES.coach\"\n                  defaultMessage=\"Coach\"\n                  />\n                \n                </Checkbox>\n\n                <br/>\n                <br/>\n                <Checkbox onClick={this.onOwnerCheck} defaultChecked={this.state.admin}>\n                  <FormattedMessage\n                  id=\"ROLES.owner\"\n                  defaultMessage=\"Owner\"\n                  />\n                </Checkbox>\n\n                <br/>\n\n                <br/>\n                <br/>\n                <div className=\"chooseTeam\">\n\n                  <Col xs={12} sm={6}>\n                    <p>\n                    <FormattedMessage\n                    id=\"ROLES.normPosition\"\n                    defaultMessage=\"Normal Position\"\n                    />\n                    </p>\n                    <FormControl componentClass=\"select\" onChange={this.selectOption} placeholder=\"goalkeeper\">\n                      <option  value=\"goalkeeper\">\n                      <FormattedMessage\n                      id=\"ROLES.posFormGoalkeeper\"\n                      defaultMessage=\"Goalkeeper\"\n                      />\n                      </option>\n                      <option value=\"defence\">\n                      <FormattedMessage\n                      id=\"ROLES.posFormDefence\"\n                      defaultMessage=\"Defence\"\n                      />\n                      </option>\n                      <option value=\"midfield\">\n                      <FormattedMessage\n                      id=\"ROLES.posFormMidfield\"\n                      defaultMessage=\"Midfield\"\n                      />\n                      </option>\n                      <option value=\"forward\">\n                      <FormattedMessage\n                      id=\"ROLES.posFormForward\"\n                      defaultMessage=\"Forward\"\n                      />\n                      </option>\n                    </FormControl>\n                  </Col>\n                  <Col xs={12} sm={6}>\n                    <p>\n                    <FormattedMessage\n                    id=\"ROLES.number\"\n                    defaultMessage=\"Number\"\n                    />\n                       </p>\n                    <Input\n                      name=\"Number\"\n                      value={(this.state.number ? this.state.number : '')}\n                      onChange={this.onChangeNumber\n                      }/>\n                  </Col>\n                  <br/>\n                  <br/>\n                  <br/>\n                  <br/>\n                  <p>\n                  <FormattedMessage\n                    id=\"ROLES.team\"\n                    defaultMessage=\"Team\"\n                    />\n                  </p>\n                  <Input\n                    name=\"team\"\n                    value={(this.state.selectTeam ? this.state.selectTeam.teamName : '')}\n                    onChange={this.onChangeFName\n                    }/>\n                  <br/>\n                  <br/>\n                  <div className=\"TeamlistShort\">\n                    <ListGroup>\n                      <div>\n                        {this.state.teams.map(name =>\n                          <ListGroupItem\n                            className=\"listingplayer\"\n                            onClick={\n                              e => {\n                                this.setState({\n                                  selectTeam: name,\n                                  team_id: name.team_id\n                                });\n                              }\n                            }\n                            key={name.team_id}>\n                            {name.teamName}\n                          </ListGroupItem>)}\n                      </div>\n                    </ListGroup>\n                  </div>\n                </div>\n\n                <br/>\n                <br/>\n\n                <Button onClick={this.addRole}>\n                <FormattedMessage\n                    id=\"ROLES.saveUserButton\"\n                    defaultMessage=\"Save user\"\n                    />\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </Grid>\n\n      )\n    }\n  }\n","import React,  { Component } from 'react';\nimport {  Col } from 'react-bootstrap';\nimport { Button, Input } from 'mdbreact'\nimport '../components/Teamlist.css'\nimport {PostData} from '../PostData';\n\n\n\nexport default class NewAddress extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      address:[],\n      address_1:'',\n      address_2:'',\n      address_3:'',\n      postal_code:'',\n      city:'',\n      country:'',\n    };\n\n    this.onChangeA1 = this.onChangeA1.bind(this);\n    this.onChangeA2 = this.onChangeA2.bind(this);\n    this.onChangeA3 = this.onChangeA3.bind(this);\n\n    this.onChangePostal = this.onChangePostal.bind(this);\n    this.onChangeCity = this.onChangeCity.bind(this);\n    this.onChangeCountry = this.onChangeCountry.bind(this);\n\n\n  }\n\n  onChangeA1(event){\n    let hh = event.target.value;\n    this.setState({address_1: hh})\n    console.log(hh);\n  }\n  onChangeA2(event){\n    const address2input = event.target.value\n    this.setState({\n      address_2: address2input\n    })\n  }\n\n  onChangeA3(event){\n    const address3input = event.target.value\n    this.setState({\n      address_3: address3input\n    })\n  }\n\n  onChangePostal(event){\n    const postalinput = event.target.value\n    this.setState({\n      postal_code: postalinput\n    })\n  }\n\n  onChangeCity(event){\n    const cityinput = event.target.value\n    this.setState({\n      city: cityinput\n    })\n  }\n\n  onChangeCountry(event){\n    const countryinput = event.target.value\n    this.setState({\n      country: countryinput\n    })\n  }\n\n  createaddress = () =>{\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    let data = {\n      address_line_1: user.address_1,\n      address_line_2: user.address_2,\n      address_line_3: user.address_3,\n      postal_code: user.postal_code,\n      city: user.city,\n      country: user.country\n    }\n    PostData('/addaddress', data);\n  }\n\n    render(){\n      return(\n          <div>\n            <br/>\n            <br/>\n            <br/>\n\n            <p>Address 1:</p>\n            <Input\n              name=\"address_1\"\n              onChange={this.onChangeA1.bind(this)}\n            validate/>\n\n            <br/>\n            <br/>\n            <br/>\n\n\n            <p>Address 2:</p>\n            <Input\n              name=\"address_2\"\n              onChange={this.onChangeA2}\n            validate/>\n            <br/>\n            <br/>\n            <br/>\n\n\n            <p>Address 3:</p>\n            <Input\n              name=\"address_3\"\n              onChange={this.onChangeA3}/>\n            <br/>\n            <br/>\n            <br/>\n\n            <Col sm={6}>\n              <p>Postal code:</p>\n              <Input\n                name=\"postal_code\"\n                onChange={this.onChangePostal}/>\n            </Col>\n            <Col sm={6}>\n              <p>City:</p>\n              <Input\n                name=\"city\"\n                onChange={this.onChangeCity}/>\n            </Col>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n\n\n            <p>Country:</p>\n            <Input\n              name=\"country\"\n              onChange={this.onChangeCountry}/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n\n            <div className=\"text-center\">\n              <Button color=\"primary\" onClick={this.createaddress} >Create new address</Button>\n            </div>\n          </div>\n\n      )\n    }\n  }\n","import React,  { Component } from 'react';\nimport { Row, Grid, Col, Tab, Tabs } from 'react-bootstrap';\nimport { ListGroup, ListGroupItem} from 'react-bootstrap';\nimport { Button, Input } from 'mdbreact'\nimport  NewAddress from '../components/NewAddress'\nimport '../components/Teamlist.css'\n\nimport { FormattedMessage } from 'react-intl';\n\nimport {PostData} from '../PostData';\n\n\n\nexport default class Address extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address:[],\n      location:'',\n      address_id:'',\n      address_1:'',\n      address_2:'',\n      address_3:'',\n      postal_code:'',\n      city:'',\n      country:'',\n    };\n\n    this.onChangeA1 = this.onChangeA1.bind(this);\n    this.onChangeA2 = this.onChangeA2.bind(this);\n    this.onChangeA3 = this.onChangeA3.bind(this);\n\n    this.onChangePostal = this.onChangePostal.bind(this);\n    this.onChangeCity = this.onChangeCity.bind(this);\n    this.onChangeCountry = this.onChangeCountry.bind(this);\n\n\n\n  }\n\n  onChangeA1(event){\n    const address1input = event.target.value\n    this.setState({\n      address_1: address1input\n    })\n  }\n\n  onChangeA2(event){\n    const address2input = event.target.value\n    this.setState({\n      address_2: address2input\n    })\n  }\n\n  onChangeA3(event){\n    const address3input = event.target.value\n    this.setState({\n      address_3: address3input\n    })\n  }\n\n  onChangePostal(event){\n    const postalinput = event.target.value\n    this.setState({\n      postal_code: postalinput\n    })\n  }\n\n  onChangeCity(event){\n    const cityinput = event.target.value\n    this.setState({\n      city: cityinput\n    })\n  }\n\n  onChangeCountry(event){\n    const countryinput = event.target.value\n    this.setState({\n      country: countryinput\n    })\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/addresses`)\n    .then(result => result.json())\n    .then(address => this.setState({address}))\n  }\n\n  updateAddress = () =>{\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    let data = {\n      address_id: user.address_id,\n      address_line_1: user.address_1,\n      address_line_2: user.address_2,\n      address_line_3: user.address_3,\n      postal_code: user.postal_code,\n      city: user.city,\n      country: user.country\n    }\n    PostData('/updateaddress', data);\n  }\n\n  delAddress = () =>{\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    let data = {\n      address_id: user.address_id,\n      address_line_1: user.address_1,\n      address_line_2: user.address_2,\n      address_line_3: user.address_3,\n      postal_code: user.postal_code,\n      city: user.city,\n      country: user.country\n    }\n    PostData('/deladdress', data);\n  }\n    render(){\n\n      return(\n        <Grid>\n          <div>\n            <Row>\n              <Col xs={12} sm={6}>\n                <p className=\"h5 text-center mb-4\">\n                <FormattedMessage\n                id=\"ADDRESS.registerMes\"\n                defaultMessage=\"REGISTERED ADDRESSES\"\n                />\n                </p>\n                <br/>\n                <div className=\"Teamlist\">\n                  <ListGroup>\n                    <div>\n                      {this.state.address.map(address =>\n                        <ListGroupItem\n                          className=\"listingplayer\"\n                          onClick={\n                            e => {\n                              this.setState({\n                                location:address.location,\n                                address_id: address.address_id,\n                                address_1: address.address_line_1,\n                                address_2: address.address_line_2,\n                                address_3: address.address_line_3,\n                                postal_code: address.postal_code,\n                                city: address.city,\n                                country: address.country\n\n                              });\n\n                            }\n                          }\n                          key={address.address_id}>\n                          {address.address_line_1}\n                        </ListGroupItem>)}\n                    </div>\n                  </ListGroup>\n                </div>\n              </Col>\n              <Col xs={12} sm={6}>\n                <Tabs defaultActiveKey={this.state.key} id=\"uncontrolled-tab-example\">\n                  <Tab eventKey={1} title=\"Edit Address\">\n\n                    <br/>\n                    <br/>\n                    <br/>\n                    <p>\n                    <FormattedMessage\n                    id=\"ADDRESS.address1\"\n                    defaultMessage=\"Address 1:\"\n                    />\n                    </p>\n                    <Input\n                      name=\"address_1\"\n                      value={(this.state.address ? this.state.address_1 : '')}\n                      onChange={this.onChangeA1}\n                    validate/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <p>\n                    <FormattedMessage\n                    id=\"ADDRESS.address2\"\n                    defaultMessage=\"Address 2:\"\n                    />\n                    </p>\n                    <Input\n                      name=\"address_2\"\n                      value={(this.state.address ? this.address_2 : '' )}\n                      onChange={this.onChangeA2}\n                    validate/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <p>\n                    <FormattedMessage\n                    id=\"ADDRESS.address3\"\n                    defaultMessage=\"Address 3:\"\n                    />\n                    </p>\n                    <Input\n                      name=\"address_3\"\n                      value={(this.state.address ? this.state.address_3 : '')}\n                      onChange={this.onChangeA3}/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <Col sm={6}>\n                      <p>\n                      <FormattedMessage\n                      id=\"ADDRESS.postalCode\"\n                      defaultMessage=\"Postal code:\"\n                      />\n                      </p>\n                      <Input\n                        name=\"postal\"\n                        value={(this.state.address ? this.state.postal_code : '')}\n                        onChange={this.onChangePostal}/>\n                    </Col>\n                    <Col sm={6}>\n                      <p>\n                      <FormattedMessage\n                      id=\"ADDRESS.city\"\n                      defaultMessage=\"City:\"\n                      />\n                      </p>\n                      <Input\n                        name=\"city\"\n                        value={(this.state.address ? this.state.city : '')}\n                        onChange={this.onChangeCity}/>\n                    </Col>\n                    <br/>\n                    <br/>\n                    <br/>\n\n                    <br/>\n                    <br/>\n                    <br/>\n                    <p>\n                    <FormattedMessage\n                      id=\"ADDRESS.country\"\n                      defaultMessage=\"Country:\"\n                      />\n                      </p>\n                    <Input\n                      name=\"country\"\n                      value={(this.state.address ? this.state.country : '')}\n                      onChange={this.onChangeCountry}/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n\n\n                    <div className=\"text-center\">\n\n                      <Button className=\"formbtnSave\" color=\"primary\" onClick={this.updateAddress} >\n                      <FormattedMessage\n                      id=\"ADDRESS.saveEdit\"\n                      defaultMessage=\"Save edit\"\n                      />\n                      </Button>\n                      <Button className=\"formbtnDel\" color=\"primary\" onClick={this.delAddress} >\n                      <FormattedMessage\n                      id=\"ADDRESS.deleteAddr\"\n                      defaultMessage=\"Delete address\"\n                      />\n                      </Button>\n\n\n                    </div>\n                  </Tab>\n                  <Tab eventKey={2} title={\n                    <FormattedMessage\n                    id=\"ADDRESS.tabNewAddress\"\n                    defaultMessage=\"New Address\"\n                    />\n                  }\n\n                  >\n                    <NewAddress/>\n                  </Tab>\n                </Tabs>\n              </Col>\n            </Row>\n          </div>\n        </Grid>\n\n      )\n    }\n  }\n\n","import React,  { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { Button, Input } from 'mdbreact'\nimport '../components/Teamlist.css'\nimport {PostData} from '../PostData';\n\n\nexport default class NewLocation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: [],\n      selectAdd:[],\n      address_id: '',\n      location_name: '',\n      description: ''\n    };\n    this.onChangeA1 = this.onChangeA1.bind(this);\n    this.onChangeA2 = this.onChangeA2.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/addresses`)\n    .then(result => result.json())\n    .then(address => this.setState({address}))\n }\n\n onChangeA1(event){\n  const address1input = event.target.value\n  this.setState({\n    location_name: address1input\n  })\n}\n\nonChangeA2(event){\n  const address2input = event.target.value\n  this.setState({\n    description: address2input\n  })\n}\n\n\n createlocation = () =>{\n  let user = Object.assign({}, this.state);    //creating copy of object\n\n  let data = {\n    address: user.address_id,\n    name: user.location_name,\n    description: user.description\n\n  }\n  PostData('/addlocation', data);\n }\n\n    render(){\n      return(\n        <div>\n          <br/>\n          <br/>\n          <p>Location name:</p>\n          <Input\n            name=\"address_1\"\n            onChange={this.onChangeA1}\n          validate/>\n          <br/>\n          <br/>\n          <br/>\n          <p>Description:</p>\n          <Input\n            name=\"address_2\"\n            onChange={this.onChangeA2}\n          validate/>\n          <br/>\n          <br/>\n          <hr/>\n          <br/>\n          <div className=\"chooseTeam\">\n\n            <p>Current address:</p>\n            <Input\n              name=\"address\"\n              value={(this.state.selectAdd ? this.state.selectAdd.address_line_1 : '')}\n\n              onChange={this.onChangeA3}/>\n            <br/>\n            <br/>\n            <p>Select new address:</p>\n\n            <div className=\"TeamlistShort\">\n              <ListGroup>\n                <div>\n                  {this.state.address.map(address =>\n                    <ListGroupItem\n                      className=\"listingplayer\"\n                      onClick={\n                        e => {\n                          this.setState({\n                            selectAdd: address,\n                            address_id:address.address_id\n                          });\n                        }\n                      }\n                      key={address.address_id}>\n                      {address.address_line_1}\n                    </ListGroupItem>)}\n                </div>\n              </ListGroup>\n            </div>\n          </div>\n          <br/>\n          <br/>\n          <br/>\n          <div className=\"text-center\">\n            <Button color=\"primary\" onClick={this.createlocation} >Create new address</Button>\n          </div>\n        </div>\n\n      )\n    }\n  }\n","import React,  { Component } from 'react';\nimport { Row, Grid, Col, Tab, Tabs } from 'react-bootstrap';\nimport { ListGroup, ListGroupItem} from 'react-bootstrap';\nimport { Button, Input } from 'mdbreact'\nimport { Link } from 'react-router-dom'\nimport  NewLocation from '../components/NewLocation'\nimport { FormattedMessage } from 'react-intl';\n\nimport {PostData} from '../PostData';\n\n\n\nimport '../components/Teamlist.css'\n\n\nexport default class CRUDLocation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: [],\n      locations: [],\n      selectLoc:[],\n      selectedAddress:[],\n      selectAdd:'',\n      addressID: '',\n      location_id:'',\n      location_name: '',\n      location_description:'',\n    };\n\n    this.onChangeA1 = this.onChangeA1.bind(this);\n    this.onChangeA2 = this.onChangeA2.bind(this);\n\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/addresses`)\n    .then(result => result.json())\n    .then(address => this.setState({address}))\n\n    fetch(`https://ballc-frontend-be.herokuapp.com/locations`)\n    .then(result => result.json())\n    .then(locations => this.setState({locations}))\n  }\n\n  onChangeA1(event){\n    const address1input = event.target.value\n    this.setState({\n      location_name: address1input\n    })\n  }\n  \n  onChangeA2(event){\n    const address2input = event.target.value\n    this.setState({\n      location_description: address2input\n    })\n  }\n\n\n  updateLocation = () =>{\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    let data = {\n      location_id: user.location_id,\n      address: user.addressID,\n      name: user.location_name,\n      description: user.location_description\n  \n    }\n    PostData('/updatelocation', data);\n  }\n\n  delLocation = () =>{\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    let data = {\n      location_id: user.location_id,\n      address: user.addressID,\n      name: user.location_name,\n      description: user.location_description\n  \n    }\n    PostData('/dellocation', data);\n  }\n  \n    render(){\n      return(\n        <Grid>\n          <div>\n            <Row>\n              <Col xs={12} sm={6}>\n                <p className=\"h5 text-center mb-4\">\n                <FormattedMessage\n                id=\"CRUDLOCATION.registerTitle\"\n                defaultMessage=\"REGISTERED LOCATIONS\"\n                />\n                </p>\n                <br/>\n                <div className=\"Teamlist\">\n                  <ListGroup>\n                    <div>\n                      {this.state.locations.map(location =>\n                        <ListGroupItem\n                          className=\"listingplayer\"\n                          onClick={\n                            e => {\n                              this.setState({\n                                selectLoc: location,\n                                location_id: location.location_id,\n                                location_name: location.name,\n                                location_description: location.description,\n                              });\n\n                              fetch(`https://ballc-frontend-be.herokuapp.com/address/${location.address}`)\n                              .then(result => result.json())\n                              .then(selectedAddress => this.setState({\n                                selectedAddress,\n                                selectAdd: selectedAddress.address_line_1,\n                                addressID: selectedAddress.address_id\n                              }))\n                              console.log(location.address)\n                            }\n                          }\n                          key={location.location_id}>\n                          {location.name}\n                        </ListGroupItem>)}\n                    </div>\n                  </ListGroup>\n                </div>\n              </Col>\n              <Col xs={12} sm={6}>\n                <Tabs defaultActiveKey={this.state.key} id=\"uncontrolled-tab-example\">\n                  <Tab eventKey={1} title={\n                    <FormattedMessage\n                    id=\"CRUDLOCATION.editAddressTab\"\n                    defaultMessage=\"Edit Address\"\n                    />\n                  }>\n                    <br/>\n                    <br/>\n                    <p>\n                    <FormattedMessage\n                    id=\"CRUDLOCATION.locationName\"\n                    defaultMessage=\"Location name:\"\n                    />\n                    </p>\n                    <Input\n                      name=\"loc\"\n                      value={(this.state.selectLoc ? this.state.location_name : '')}\n                      onChange={this.onChangeA1}\n                    validate/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <p>\n                    <FormattedMessage\n                    id=\"CRUDLOCATION.description\"\n                    defaultMessage=\"Description:\"\n                    />\n                    </p>\n                    <Input\n                      name=\"des\"\n                      value={(this.state.selectLoc ? this.state.location_description : '' )}\n                      onChange={this.onChangeA2}\n                    validate/>\n                    <br/>\n                    <br/>\n                    <hr/>\n                    <br/>\n                    <div className=\"chooseTeam\">\n\n                      <p>\n                      <FormattedMessage\n                      id=\"CRUDLOCATION.currentAddress\"\n                      defaultMessage=\"Current address:\"\n                      />\n                    </p>\n                      <Input\n                        name=\"address\"\n                        value={(this.state.selectAdd ? this.state.selectAdd : '')}\n                        onChange={this.onChangeA3}/>\n                      <br/>\n                      <br/>\n                      <p>\n                      <FormattedMessage\n                      id=\"CRUDLOCATION.selectNewAddress\"\n                      defaultMessage=\"Select new address:\"\n                      />\n                      </p>\n\n                      <div className=\"TeamlistShort\">\n                        <ListGroup>\n                          <div>\n                            {this.state.address.map(address =>\n                              <ListGroupItem\n                                className=\"listingplayer\"\n                                onClick={\n                                  e => {\n                                    this.setState({\n                                      selectAdd: address.address_line_1\n                                    });\n                                  }\n                                }\n                                key={address.address_id}>\n                                {address.address_line_1}\n                              </ListGroupItem>)}\n                          </div>\n                        </ListGroup>\n                      </div>\n                    </div>\n                    <br/>\n\n                    <Link to='/Address'>\n                      <p className=\"newAddressLink\">\n                      <FormattedMessage\n                      id=\"CRUDLOCATION.createNewAddress\"\n                      defaultMessage=\"Create new address\"\n                      />\n                    </p>\n                    </Link>\n                    <br/>\n\n\n                    <div className=\"text-center\">\n\n                      <Button className=\"formbtnSave\" color=\"primary\" onClick={this.updateLocation} >\n                      <FormattedMessage\n                      id=\"CRUDLOCATION.saveEdit\"\n                      defaultMessage=\"Save edit\"\n                      />\n                      </Button>\n                      <Button className=\"formbtnDel\" color=\"primary\" onClick={this.delLocation} >\n                      <FormattedMessage\n                      id=\"CRUDLOCATION.deleteLocation\"\n                      defaultMessage=\"Delete location\"\n                      />\n                      </Button>\n\n\n                    </div>\n                  </Tab>\n                  <Tab eventKey={2} title={\n                    <FormattedMessage\n                    id=\"CRUDLOCATION.newAddressTab\"\n                    defaultMessage=\"New Address\"\n                    />\n\n                  }>\n                    <NewLocation/>\n                  </Tab>\n                </Tabs>\n              </Col>\n            </Row>\n          </div>\n        </Grid>\n\n      )\n    }\n  }\n","import React,  { Component } from 'react';\nimport { Col, Grid, Row, ListGroup, ListGroupItem} from 'react-bootstrap';\nimport { Button, Input } from 'mdbreact'\n\nimport { FormattedMessage } from 'react-intl';\n\nimport {PostData} from '../PostData';\n\n\nimport '../components/Teamlist.css'\n\n\nexport default class CRUDAssociation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      associations: [],\n      selectAss:[],\n      association_id:'',\n      association_name:'',\n      association_description:'',\n\n    };\n    this.onChangeA1 = this.onChangeA1.bind(this);\n    this.onChangeA2 = this.onChangeA2.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/associations`)\n    .then(result => result.json())\n    .then(associations => this.setState({associations}))\n  }\n\n\n onChangeA1(event){\n  const address1input = event.target.value\n  this.setState({\n    association_name: address1input\n  })\n}\n\nonChangeA2(event){\n  const address2input = event.target.value\n  this.setState({\n    association_description: address2input\n  })\n}\n\ncreateassociation = () =>{\n  let user = Object.assign({}, this.state);    //creating copy of object\n\n  let data = {\n    name: user.association_name,\n    description: user.association_description\n\n  }\n  PostData('/addassociation', data);\n}\n\nupdateAssociation = () =>{\n  let user = Object.assign({}, this.state);    //creating copy of object\n\n  let data = {\n    association_id: user.association_id,\n    name: user.association_name,\n    description: user.association_description\n\n  }\n  PostData('/updateassociation', data);\n}\n\ndelAssociation = () =>{\n  let user = Object.assign({}, this.state);    //creating copy of object\n\n  let data = {\n    association_id: user.association_id,\n    name: user.association_name,\n    description: user.association_description\n\n  }\n  PostData('/delassociation', data);\n}\n\n    render(){\n      return(\n        <Grid>\n          <div>\n            <Row>\n              <Col xs={12} sm={6}>\n                <p className=\"h5 text-center mb-4\">\n                <FormattedMessage\n                id=\"CRUDASSOCIATION.registerTitle\"\n                defaultMessage=\"REGISTERED ASSOCIATIONS\"\n                />\n                </p>\n                <br/>\n                <div className=\"Teamlist\">\n                  <ListGroup>\n                    <div>\n                      {this.state.associations.map(ass =>\n                        <ListGroupItem\n                          className=\"listingplayer\"\n                          onClick={\n                            e => {\n                              this.setState({\n                                selectAss: ass,\n                                association_id: ass.association_id,\n                                association_name: ass.name,\n                                association_description: ass.description,\n                              });\n                            }\n                          }\n                          key={ass.association_id}>\n                          {ass.name}\n                        </ListGroupItem>)}\n                    </div>\n                  </ListGroup>\n                </div>\n              </Col>\n              <Col xs={12} sm={6}>\n                <br/>\n                <br/>\n                <hr/>\n                <br/>\n                <br/>\n                <p>\n                <FormattedMessage\n                id=\"CRUDASSOCIATION.assName\"\n                defaultMessage=\"Association name:\"\n                />\n                </p>\n                <Input\n                  name=\"loc\"\n                  value={(this.state.selectAss ? this.state.association_name : '')}\n                  onChange={this.onChangeA1}\n                validate/>\n                <br/>\n                <br/>\n                <br/>\n                <hr/>\n                <br/>\n                <br/>\n                <p>\n                <FormattedMessage\n                id=\"CRUDASSOCIATION.description\"\n                defaultMessage=\"Description:\"\n                />\n                </p>\n                <Input\n                  name=\"des\"\n                  value={(this.state.selectAss ? this.state.association_description : '' )}\n                  onChange={this.onChangeA2}\n                validate/>\n                <br/>\n                <br/>\n                <hr/>\n                <br/>\n\n                <br/>\n                <br/>\n                <br/>\n\n                <div className=\"text-center\">\n\n                  <Button color=\"primary\" onClick={this.createassociation} >\n                  <FormattedMessage\n                  id=\"CRUDASSOCIATION.newAssButton\"\n                  defaultMessage=\"Create new association\"\n                  />\n                  </Button>\n\n                  <Button className=\"formbtnSave\" color=\"primary\" onClick={this.updateAssociation} >\n                  <FormattedMessage\n                  id=\"CRUDASSOCIATION.saveEditButton\"\n                  defaultMessage=\"Save edit\"\n                  />\n                  </Button>\n\n                  <Button className=\"formbtnDel\" color=\"primary\" onClick={this.delAssociation} >\n                  <FormattedMessage\n                  id=\"CRUDASSOCIATION.deleteAssButton\"\n                  defaultMessage=\"Delete association\"\n                  />\n                  </Button>\n\n\n                </div>\n\n              </Col>\n            </Row>\n          </div>\n        </Grid>\n\n      )\n    }\n  }\n","import React, { Component} from 'react';\nimport { Input } from 'mdbreact'\nimport { Grid, Row, Col } from 'react-bootstrap'\nimport DayPicker from 'react-day-picker';\nimport {Button} from 'mdbreact'\nimport { FormattedMessage } from 'react-intl';\n\nimport {PostData} from '../PostData';\n\n\nimport 'react-day-picker/lib/style.css';\n\nimport './Teams.css'\n\n\n\nexport default class NewSeason extends Component{\n    constructor(props) {\n      super(props);\n      this.handleDayClickStart = this.handleDayClickStart.bind(this);\n      this.handleDayClickEnd = this.handleDayClickEnd.bind(this);\n\n      this.state = {\n        selectedDayStart: undefined,\n        selectedDayEnd:undefined,\n        selectedDayStartString:'',\n        selectedDayEndString:'',\n        seasonName:'',\n        seasonDescription:'',\n\n      };\n  }\n\n  onChangeName(event){\n    const name = event.target.value\n    this.setState({\n      seasonName: name\n    })\n  }\n\n  onChangeDescription(event){\n    const description = event.target.value\n    this.setState({\n      seasonDescription: description\n    })\n  }\n\n    handleDayClickStart(day, { selected, disabled }) {\n\n     if (disabled) {\n       return;\n     }\n     if (selected) {\n       this.setState({ selectedDayStart: undefined });\n       return;\n     }\n     this.setState({\n       selectedDayStart: day,\n       selectedDayStartString: day.toLocaleDateString('en-GB')\n     });\n   }\n\n   handleDayClickEnd(day, { selected, disabled }) {\n    if (disabled) {\n      return;\n    }\n    if (selected) {\n      this.setState({ selectedDayEnd: undefined });\n      return;\n    }\n    this.setState({\n      selectedDayEnd: day,\n      selectedDayEndString: day.toLocaleDateString('en-GB')\n     });\n\n    }\n\n    addSeason = () =>{\n      let user = Object.assign({}, this.state);    //creating copy of object\n\n      var data = {\n        start_date: user.selectedDayStartString,\n        end_date: user.selectedDayEndString,\n        name: user.seasonName,\n        description: user.seasonDescription\n      }\n\n      PostData('/addseason', data)\n    }\n    render() {\n\n      return (\n          <div>\n            <Grid>\n              <h1>\n              <FormattedMessage\n              id=\"NEWSESASON.createNewSeasonTitle\"\n              defaultMessage=\"Create new season\"\n              />\n              </h1>\n              <div className=\"buffer\"/>\n              <Row>\n                <Col xs={12} sm={6}>\n                  <p>\n                  <FormattedMessage\n                  id=\"NEWSESASON.name\"\n                  defaultMessage=\"Name:\"\n                  />\n                  </p>\n                  <Input\n                    name=\"Name\"\n                    onChange={this.onChangeName.bind(this)}\n                  />\n                </Col>\n                <Col xs={12} sm={6}>\n                  <p>\n                  <FormattedMessage\n                  id=\"NEWSESASON.description\"\n                  defaultMessage=\"Description:\"\n                  />\n                  </p>\n                  <Input\n                    name=\"Description\"\n                    onChange={this.onChangeDescription.bind(this)}\n                  />\n                </Col>\n                <div className=\"buffer\"/>\n                <div className=\"buffer\"/>\n\n                <Col xs={12} sm={6}>\n                  <p>\n                  <FormattedMessage\n                  id=\"NEWSESASON.seasonStart\"\n                  defaultMessage=\"Start of season\"\n                  />\n                  </p>\n                  <hr/>\n\n                  <DayPicker\n                    onDayClick={this.handleDayClickStart}\n                    selectedDays={this.state.selectedDayStart}\n                    disabledDays={{ daysOfWeek: [0] }}\n                  />\n                  {this.state.selectedDayStart ? (\n                    <p>\n                    <FormattedMessage\n                    id=\"NEWSESASON.startDate\"\n                    defaultMessage=\"Startdate:\"\n                    />\n                   {this.state.selectedDayStart.toLocaleDateString('en-GB')}</p>\n                  ) : (\n                    <p>\n                    <FormattedMessage\n                    id=\"NEWSESASON.selectStartLabel\"\n                    defaultMessage=\"Please select a day to start the season\"\n                  />\n                  </p>\n                  )}\n                </Col>\n\n                <Col xs={12} sm={6}>\n                  <p>\n                  <FormattedMessage\n                  id=\"NEWSESASON.seasonEnd\"\n                  defaultMessage=\"End of season\"\n                  />\n                  </p>\n                  <hr/>\n                  <DayPicker\n                    onDayClick={this.handleDayClickEnd}\n                    selectedDays={this.state.selectedDayEnd}\n                    disabledDays={{ daysOfWeek: [0] }}\n                  />\n                  {this.state.selectedDayEnd ? (\n                    <p>\n                    <FormattedMessage\n                    id=\"NEWSESASON.endDate\"\n                    defaultMessage=\"Enddate:\"\n                    />\n                   {this.state.selectedDayEnd.toLocaleDateString('en-GB')}</p>\n                  ) : (\n                    <p>\n                    <FormattedMessage\n                    id=\"NEWSESASON.selectEndLabel\"\n                    defaultMessage=\"Please select a day to end the season\"\n                    />\n                  </p>\n                  )}\n                </Col>\n\n              </Row>\n\n              <div className=\"buffer\"/>\n              <div className=\"text-center\">\n\n                <Button className=\"formbtn\" color=\"primary\" onClick={this.addSeason} >\n                <FormattedMessage\n                  id=\"NEWSESASON.createNewSeasonButton\"\n                  defaultMessage=\"Create new season\"\n                  />\n                  </Button>\n\n              </div>\n\n            </Grid>\n          </div>\n\n          );\n          }\n\n          }\n","import React, { Component} from 'react';\nimport { Input } from 'mdbreact'\nimport { Grid, Row, Col, ListGroup, ListGroupItem } from 'react-bootstrap'\nimport { Button } from 'mdbreact'\nimport { FormattedMessage } from 'react-intl';\n\n\nimport 'react-day-picker/lib/style.css';\n\nimport './Teams.css'\n\n\n\nexport default class EditSeason extends Component{\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        seasons:[],\n        selectedSeason:[],\n        selectedDayStart: undefined,\n        selectedDayEnd:undefined,\n        selectedDayStartString:'',\n        selectedDayEndString:'',\n        seasonName:'',\n        seasonDescription:'',\n\n      };\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/seasons`)\n    .then(result => result.json())\n    .then(seasons => this.setState({seasons}))\n  }\n\n  onChangeName(event){\n    const name = event.target.value\n    this.setState({\n      seasonName: name\n    })\n  }\n\n  onChangeDescription(event){\n    const description = event.target.value\n    this.setState({\n      seasonDescription: description\n    })\n  }\n\n\n    render() {\n\n      return (\n          <div>\n            <Grid>\n              <br/>              <br/>\n\n              <Row>\n                <Col xs={12} sm={6}>\n                  <p className=\"h5 text-center mb-4\">\n                    <FormattedMessage\n                    id=\"EDITSEASON.registerTitle\"\n                    defaultMessage=\"REGISTERED SEASONS\"\n                    />\n                    </p>\n                  <br/>\n                  <div className=\"Teamlist\">\n                    <ListGroup>\n                      <div>\n                        {this.state.seasons.map(season =>\n                          <ListGroupItem\n                            className=\"listingplayer\"\n                            onClick={\n                              e => {\n                                this.setState({\n                                  selectedSeason: season,\n                                  selectedDayStartString:season.start_date,\n                                  selectedDayEndString:season.end_date,\n                                  seasonName: season.name,\n                                  seasonDescription:season.description,\n                                });\n                              }\n                            }\n                            key={season.season_id}>\n                            {season.name}\n                          </ListGroupItem>)}\n                      </div>\n                    </ListGroup>\n                  </div>\n                </Col>\n                <Col xs={12} sm={6}>\n\n                  <Col xs={12} sm={6}>\n                    <p>\n                    <FormattedMessage\n                    id=\"EDITSEASON.name\"\n                    defaultMessage=\"Name:\"\n                    />\n                    </p>\n                    <Input\n                      name=\"Name\"\n                      value={(this.state.selectedSeason ? this.state.seasonName : '')}\n                      onChange={this.onChangeName.bind(this)}\n                    />\n                  </Col>\n                  <Col xs={12} sm={6}>\n                    <p>\n                    <FormattedMessage\n                    id=\"EDITSEASON.description\"\n                    defaultMessage=\"Description:\"\n                    />\n                    </p>\n                    <Input\n                      name=\"Description\"\n                      value={(this.state.selectedSeason ? this.state.seasonDescription : '')}\n                      onChange={this.onChangeDescription.bind(this)}\n                    />\n                  </Col>\n                  <div className=\"buffer\"/>\n                  <div className=\"buffer\"/>\n\n                  <Col xs={12} sm={6}>\n                    <p>\n                    <FormattedMessage\n                    id=\"EDITSEASON.startMessage\"\n                    defaultMessage=\"Start of season\"\n                    />\n                    </p>\n                    <hr/>\n                    <Input\n                      name=\"Description\"\n                      value={(this.state.selectedSeason ? this.state.selectedDayEndString : '')}\n                    />\n                  </Col>\n\n                  <Col xs={12} sm={6}>\n                    <p>\n                    <FormattedMessage\n                    id=\"EDITSEASON.endMessage\"\n                    defaultMessage=\"End of season\"\n                    />\n                    </p>\n                    <hr/>\n                    <Input\n                      name=\"Description\"\n                      value={(this.state.selectedSeason ? this.state.selectedDayEndString : '')}\n                    />\n\n                  </Col>\n                  <div className=\"buffer\"/>\n                  <div className=\"buffer\"/>\n                  <div className=\"buffer\"/>\n\n                  <div className=\"text-center\">\n                    <Button className=\"formbtnSave\" color=\"primary\" onClick={this.updatePerson} >\n                    <FormattedMessage\n                    id=\"EDITSEASON.saveEditButton\"\n                    defaultMessage=\"Save Edit\"\n                    />\n                    </Button>\n                    <Button className=\"formbtnDel\" color=\"primary\" onClick={this.delPerson} >\n                    <FormattedMessage\n                    id=\"EDITSEASON.deleteSeasonButton\"\n                    defaultMessage=\"Delete Season\"\n                    />\n                    </Button>\n\n                  </div>\n\n                </Col>\n\n              </Row>\n\n              <div className=\"buffer\"/>\n\n\n            </Grid>\n          </div>\n\n          );\n          }\n\n          }\n","import React, {Component} from 'react';\nimport Select from 'react-select';\nimport '../pages/Home.css';\nimport {Button } from 'mdbreact';\nimport {PostData} from '../PostData';\n\n\n\nexport default class Matchposition extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        players:[],\n        goaltypes:[],\n        selectedOption:'',\n        teamID: this.props.teamid,\n        test:'hahaha',\n      };\n      this.positions = [];\n      console.log(props)\n\n    }\n\n    handleGoalkeeper = (selectedOption) => {\n      this.setState({ selectedOption });\n      console.log(`Option selected:`, selectedOption);\n      var fullposition = {\n        player: selectedOption,\n        description: \"Goalkeeper\"\n      };\n      this.positions.push(fullposition);\n    }\n\n    handleDefence = (selectedOption) => {\n      this.setState({ selectedOption });\n      console.log(`Option selected:`, selectedOption);\n      var fullposition = {\n        player: selectedOption,\n        description: \"Defence\"\n      };\n      this.positions.push(fullposition);\n    }\n\n    handleMidfield = (selectedOption) => {\n      this.setState({ selectedOption });\n      console.log(`Option selected:`, selectedOption);\n      var fullposition = {\n        player: selectedOption,\n        description: \"Midfield\"\n      };\n      this.positions.push(fullposition);\n    }\n\n    handleforward = (selectedOption) => {\n      this.setState({ selectedOption });\n      console.log(`Option selected:`, selectedOption);\n      var fullposition = {\n        player: selectedOption,\n        description: \"Forward\"\n      };\n      this.positions.push(fullposition);\n    }\n\n\n    componentDidMount(){\n      fetch(`https://ballc-frontend-be.herokuapp.com/playersteam/${this.state.teamID}`)\n      .then(result => result.json())\n      .then(players => this.setState({players}))\n    }\n\n    addPosition = () =>{\n      let user = Object.assign({}, this.state);    //creating copy of object\n\n      this.props.newdata(this.positions);\n      //PostData('positions', this.positions);\n      return this.positions;\n    }\n    render() {\n      const { selectedOption } = this.state.players;\n      let players = this.state.players;\n      let user = Object.assign({}, this.state.position);    //creating copy of object\n\n\n      var goalkeeper = \"goalkeeper\";\n\n    return (\n      <div>\n        <hr/>\n        <div className=\"MatchPosList\">\n          <div className=\"newScore\">\n            <p>Select Goalkeeper</p>\n            <Select\n              name = {goalkeeper}\n              value={selectedOption}\n              onChange={this.handleGoalkeeper}\n              options={players}\n            />\n            <hr/>\n            <br/>\n            <p>Select Defence</p>\n            <Select\n              name = \"defence\"\n              value={selectedOption}\n              onChange={this.handleDefence}\n              options={players}\n            />\n            <p>Select Defence</p>\n            <Select\n              name = \"defence\"\n              value={selectedOption}\n              onChange={this.handleDefence}\n              options={players}\n            />  <p>Select Defence</p>\n            <Select\n              name = \"defence\"\n              value={selectedOption}\n              onChange={this.handleDefence}\n              options={players}\n            />  <p>Select Defence</p>\n            <Select\n              name = \"defence\"\n              value={selectedOption}\n              onChange={this.handleDefence}\n              options={players}\n            />\n            <hr/>\n            <br/>\n            <p>Select Midfield</p>\n            <Select\n              name = \"midfield\"\n              value={selectedOption}\n              onChange={this.handleMidfield}\n              options={players}\n            />\n            <p>Select Midfield</p>\n            <Select\n              name = \"midfield\"\n              value={selectedOption}\n              onChange={this.handleMidfield}\n              options={players}\n            />\n            <p>Select Midfield</p>\n            <Select\n              name = \"midfield\"\n              value={selectedOption}\n              onChange={this.handleMidfield}\n              options={players}\n            />\n            <p>Select Midfield</p>\n            <Select\n              name = \"midfield\"\n              value={selectedOption}\n              onChange={this.handleMidfield}\n              options={players}\n            />\n            <hr/>\n            <br/>\n            <p>Select Forward</p>\n            <Select\n              name = \"forward\"\n              value={selectedOption}\n              onChange={this.handleforward}\n              options={players}\n            />\n            <p>Select Forward</p>\n            <Select\n              name = \"forward\"\n              value={selectedOption}\n              onChange={this.handleforward}\n              options={players}\n            />\n              <Button className=\"formbtnSave\" color=\"primary\" onClick={this.addPosition} >Save results</Button>\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport Select from 'react-select';\nimport {Grid, Row, Col} from 'react-bootstrap'\nimport {Button } from 'mdbreact'\nimport { FormattedMessage } from 'react-intl';\n\nimport DayPicker from 'react-day-picker';\nimport Matchpositions from '../components/Matchpositions'\nimport {PostData} from '../PostData';\nimport axios from 'axios';\n\n\n\nexport default class Match extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teamsformatch:[],\n      seasons:[],\n      home: [],\n      away: [],\n      homeID:'',\n      awayID:'',\n      selectedOptionHome:'',\n      selectedOptionAway: '',\n      selectedOptionSeason:'',\n      selectedDay:undefined,\n      selectedDayString:'',\n      positionsHome: [],\n      positionsAway: []\n\n    };\n  this.handleDayClick = this.handleDayClick.bind(this);\n  }\n\n\n\n  handleDayClick(day, { selected, disabled }) {\n\n   if (disabled) {\n     return;\n   }\n   if (selected) {\n     this.setState({ selectedDay: undefined });\n     return;\n   }\n   this.setState({\n     selectedDay: day,\n     selectedDayString: day.toLocaleDateString('en-GB')\n   });\n }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/teamsformatch`)\n    .then(result => result.json())\n    .then(teamsformatch => this.setState({teamsformatch}))\n\n    fetch(`https://ballc-frontend-be.herokuapp.com/seasonslist`)\n    .then(result => result.json())\n    .then(seasons => this.setState({seasons}))\n  }\n\n    componentWillReceiveProps(nextprop){\n      fetch(`https://ballc-frontend-be.herokuapp.com/playersteam/${nextprop.homeID}`)\n      .then(result => result.json())\n      .then(home => this.setState({home}))\n\n      fetch(`https://ballc-frontend-be.herokuapp.com/playersteam/${nextprop.awayID}`)\n      .then(result => result.json())\n      .then(away => this.setState({away}))\n    }\n\n  handleChangeHome = (selectedOptionHome) => {\n    this.setState({ selectedOptionHome,\n    homeID:selectedOptionHome.value });\n    console.log(`Hometeam:`, selectedOptionHome);\n  }\n  handleChangeAway = (selectedOptionAway) => {\n    this.setState({ selectedOptionAway,\n    awayID:selectedOptionAway.value });\n    console.log(`Awayteam:`, selectedOptionAway);\n  }\n  handleChangeSeason = (selectedOptionSeason) => {\n    this.setState({ selectedOptionSeason});\n  }\n\n  getDataHome = (data) =>{\n    console.log(data);\n    this.setState({positionsHome: data});\n  }\n\n  getDataAway = (data) =>{\n    console.log(data);\n    this.setState({positionsAway: data});\n  }\n\n  addMatch = () =>{\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    var data = {\n      match_date: user.selectedDayString,\n      season: user.selectedOptionSeason,\n      home_team: user.selectedOptionHome,\n      away_team: user.selectedOptionAway,\n      positionsHome: user.positionsHome,\n      positionsAway: user.positionsAway\n\n    }\n    PostData('/addmatch', data)\n  }\n\n  render() {\n    const { selectedOptionHome } = this.state.teamsformatch;\n    const { selectedOptionAway } = this.state.teamsformatch;\n    const { selectedOptionSeason } = this.state.seasons;\n\n\n    return (\n      <div>\n        <Grid>\n          <Row>\n            <br/>\n            <Col xs={12} sm={4}></Col>\n            <Col xs={12} sm={4}>\n              <p>\n              <FormattedMessage\n              id=\"MATCH.seasonTitle\"\n              defaultMessage=\"SEASON\"\n              />\n              </p>\n              <Select\n                value={selectedOptionSeason}\n                onChange={this.handleChangeSeason}\n                options={this.state.seasons}\n              />\n            </Col>\n            <br/><br/><br/>\n            <Col xs={12} sm={6}>\n              <p>\n              <FormattedMessage\n              id=\"MATCH.homeTeamTitle\"\n              defaultMessage=\"HOME TEAM\"\n              />\n              </p>\n              <Select\n                value={selectedOptionHome}\n                onChange={this.handleChangeHome}\n                options={this.state.teamsformatch}\n              />\n            </Col>\n            <Col xs={12} sm={6}>\n              <p>\n              <FormattedMessage\n              id=\"MATCH.awayTeamTitle\"\n              defaultMessage=\"AWAY TEAM\"\n              />\n              </p>\n\n              <Select\n                value={selectedOptionAway}\n                onChange={this.handleChangeAway}\n                options={this.state.teamsformatch}\n              />\n            </Col>\n            <Col xs={12} sm={6}>\n              {this.state.selectedOptionHome ? (\n                <Matchpositions teamid={this.state.homeID} newdata = {this.getDataHome} />\n              ) : (\n                <p></p>\n              )}\n            </Col>\n\n            <Col xs={12} sm={6}>\n              {this.state.selectedOptionAway ? (\n                <Matchpositions teamid={this.state.awayID} newdata = {this.getDataAway} />\n              ) : (\n                <p></p>\n              )}\n\n            </Col>\n            <br/><br/><br/><br/><br/><br/><br/>\n\n            <Col xs={12} sm={6}>\n              <br/><br/>\n              <p>\n              <FormattedMessage\n              id=\"MATCH.choseGameDate\"\n              defaultMessage=\"Choose game date\"\n              />\n              </p>\n              <hr/>\n              <DayPicker\n                onDayClick={this.handleDayClick}\n                selectedDays={this.state.selectedDay}\n                disabledDays={{ daysOfWeek: [0] }}\n              />\n            </Col>\n              <Col xs={12} sm={6}>\n              <br/><br/><br/><br/>\n\n              <h3 className=\"greytext\">\n              <FormattedMessage\n              id=\"MATCH.gameData\"\n              defaultMessage=\"GAMEDATA:\"\n              />\n              </h3>\n              {this.state.selectedOptionHome && this.state.selectedOptionAway ? (\n                <p>{this.state.selectedOptionHome.label} VS {this.state.selectedOptionAway.label}</p> ):(\n                <p>\n                <FormattedMessage\n                id=\"MATCH.selectMessage\"\n                defaultMessage=\"Select teams to see gamedata\"\n                />\n                </p>)}\n\n              {this.state.selectedDay ? (\n                <p>\n                <FormattedMessage\n                id=\"MATCH.gameDate\"\n                defaultMessage=\"Gamedate:\"\n                />\n                 {this.state.selectedDay.toLocaleDateString('en-GB')}</p>\n              ) : (\n                <p></p>\n              )}\n\n\n              <Button className=\"formbtnSave\" color=\"primary\" onClick={this.addMatch} >\n              <FormattedMessage\n              id=\"MATCH.saveResultButton\"\n              defaultMessage=\"Save results\"\n              />\n              </Button>\n              <Button className=\"formbtnDel\" color=\"primary\" onClick={this.delResult} >\n              <FormattedMessage\n              id=\"MATCH.deleteResultButton\"\n              defaultMessage=\"Delete results\"\n              />\n              </Button>\n\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport Select from 'react-select';\nimport '../pages/Home.css';\nimport {Button } from 'mdbreact';\n\n\nexport default class Match extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        players:props.players,\n        goaltypes:props.goaltypes,\n        selectedPlayer: props.selectedPlayer,\n        selectedGoal: props.selectedGoal,\n\n      };\n\n      this.handleChangePlayer = props.handleChangePlayer;\n      this.handleChangeGoal = props.handleChangeGoal;\n      this.selectgoal = props.selectgoal;\n    }\n\n\n\n\n    render(props) {\n\n      const { selectedPlayer } = this.state.players;\n      const { selectedGoal } = this.state.goaltypes;\n  \n      let players = this.state.players\n      let goaltypes = this.state.goaltypes\n  \n\n    return (\n      <div>\n        <hr/>\n\n        <div className=\"newScore\">\n          <p>Select player</p>\n          <Select\n            value={selectedPlayer}\n            onChange={this.handleChangePlayer}\n            options={players}\n          />\n          <br/>\n          <p>Select goaltype</p>\n\n          <Select\n            value={selectedGoal}\n            onChange={this.handleChangeGoal}\n            options={goaltypes}\n          />\n\n          <Button className=\"formbtnSave\" color=\"primary\" onClick={this.selectgoal} >Save results</Button>\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react'\nimport {Grid, Row, Col, ListGroup, ListGroupItem } from 'react-bootstrap'\nimport Select from 'react-select';\n\nimport Goal from '../components/Goal'\nimport { FormattedMessage } from 'react-intl';\n\nimport Result from './Result'\nimport {Button, Input } from 'mdbreact'\nimport {PostData} from '../PostData';\n\n\n\nexport default class Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teams:[],\n      matches:[],\n      hometeam: '',\n      awayteam: '',\n      homescoreHome: 0,\n      homescoreAway: 0,\n      emptyarrayHome:[],\n      emptyarrayAway:[],\n      match_id: '',\n      players:[],\n      goaltypes:[],\n\n      homegoals: [],\n      awaygoals: [],\n\n    };\n\n    this.handleChangePlayerHome = this.handleChangePlayerHome.bind(this);\n    this.handleChangePlayerAway = this.handleChangePlayerAway.bind(this);\n\n    this.handleChangeGoalHome = this.handleChangeGoalHome.bind(this);\n    this.handleChangeGoalAway = this.handleChangeGoalAway.bind(this);\n\n    let playerHome = '';\n    let goalTypeHome = '';\n    let playerAway = '';\n    let goalTypeAway = '';\n    let goalsHome = {};\n    let goalsAway = {};\n\n  }\n  createGoalHome = () => {\n  let homescore = this.state.homescore\n  let i = 0\n\n  for (i = 0; i < this.state.homescore.value; i++){\n    return(<Goal\n      selectedPlayer=\"\"\n      handleChangePlayer={this.handleChangePlayer}\n      players=\"\"\n      selectedGoal=\"\"\n      handleChangeGoal={this.handleChangeGoal}\n      goaltypes=\"\"\n      selectgoal={this.selectgoal}\n    />)\n  }\n}\n\n\n  filterUpdateHome(event){\n    var emptyarray = []\n    for(var i = 0; i < event.target.value; i++){\n      emptyarray.push(i)\n    }\n    this.setState({\n      homescoreHome: event.target.value,\n      emptyarrayHome: emptyarray,\n    })\n\n  }\n  filterUpdateAway(event){\n    var emptyarray = []\n    for(var i = 0; i < event.target.value; i++){\n      emptyarray.push(i)\n    }\n    this.setState({\n      homescoreAway: event.target.value,\n      emptyarrayAway: emptyarray,\n    })\n\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-backend-api.herokuapp.com/matches`)\n    .then(result => result.json())\n    .then(matches => this.setState({matches}))\n\n    fetch(`https://ballc-backend-api.herokuapp.com/teams`)\n    .then(result => result.json())\n    .then(teams => this.setState({teams}))\n\n    fetch(`https://ballc-frontend-be.herokuapp.com/playersformatch`)\n    .then(result => result.json())\n    .then(players => this.setState({players}))\n\n    fetch(`https://ballc-frontend-be.herokuapp.com/goaltypeformatch`)\n    .then(result => result.json())\n    .then(goaltypes => this.setState({goaltypes}))\n  }\n\n  getTeamName(id){\n    var teamname= ''\n    this.state.teams.forEach(team =>\n      {\n        if(team.team_id === id){\n          teamname= team.teamName\n        }\n      }\n    )\n    return teamname\n  }\n\n\n  handleChangePlayerHome = (selectedPlayer) => {\n\n    this.playerHome = selectedPlayer;\n    console.log(`Option selected:`, this.playerHome);\n  }\n\n  handleChangeGoalHome = (selectedGoalType) => {\n    this.goalTypeHome = selectedGoalType;\n    console.log(`Option selected:`, this.goalTypeHome);\n\n  }\n\n  handleChangePlayerAway = (selectedPlayer) => {\n\n    this.playerAway = selectedPlayer;\n    console.log(`Option selected:`, this.playerAway);\n  }\n\n  handleChangeGoalAway = (selectedGoalType) => {\n    this.goalTypeAway = selectedGoalType;\n    console.log(`Option selected:`, this.goalTypeAway);\n\n  }\n\n  selectgoalHome = () => {\n    //let user = Object.assign({}, this.state.goals);    //creating copy of object\n\n    this.goalsHome = {\n      player: this.playerHome,\n      goaltype: this.goalTypeHome\n    }\n\n    //this.setState({goals:user});\n    console.log(this.goalsHome);\n    this.state.homegoals.push(this.goalsHome);\n    console.log(this.state.homegoals);\n\n\n  }\n\n  selectgoalAway = () => {\n\n    this.goalsAway = {\n      player: this.playerAway,\n      goaltype: this.goalTypeAway\n    }\n\n    console.log(this.goalsAway);\n    this.state.awaygoals.push(this.goalsAway);\n    console.log(this.state.awaygoals);\n\n\n  }\n\n  saveResult = () =>{\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    let data ={\n      homescore: user.homescoreHome,\n      awayscore: user.homescoreAway,\n      hometeam: user.hometeam,\n      awayteam: user.awayteam,\n      match_id: user.match_id\n\n    }\n    //PostData('result', data);\n\n    var newhome = this.state.homegoals.slice();\n\n    let data2 = {\n      homegoals: this.state.homegoals,\n      awaygoals: this.state.awaygoals,\n      match_id: user.match_id\n\n    }\n\n    PostData('addgoal', data2);\n\n\n  }\n\n  render() {\n    /*\n    const { selectedPlayer } = this.state.players;\n    const { selectedGoal } = this.state.goaltypes;\n*/\n\n    let players = this.state.players\n    let goaltypes = this.state.goaltypes\n\n\n\n\n    return (\n      <div>\n        <Grid>\n          <Row>\n            <Col xs={12} sm={4}>\n              <h2>\n              <FormattedMessage\n              id=\"RESULT.matchesTitle\"\n              defaultMessage=\"MATCHES\"\n              />\n              </h2>\n              <br/>\n              <div className=\"TeamlistMatch\">\n                <ListGroup>\n                  <div>\n                    {this.state.matches.map(name =>\n                      <ListGroupItem\n                        className=\"listingplayer\"\n                        onClick={\n                          e => {\n                            this.setState({\n                              hometeam: name.home_team,\n                              awayteam: name.away_team,\n                              match_id: name.match_id\n                            });\n                          }\n                        }\n                        key={name.match_id}>\n                        {this.getTeamName(name.home_team)} vs {this.getTeamName(name.away_team)} on {name.match_date}\n                      </ListGroupItem>)}\n                  </div>\n                </ListGroup>\n              </div>\n            </Col>\n            <Col xs={12} sm={4}>\n              {this.getTeamName(this.state.hometeam) ? (\n                <h2>{this.getTeamName(this.state.hometeam)}</h2>) : (<h2>Home Team</h2>)}\n              <p> \n              <FormattedMessage\n              id=\"RESULT.homeScoreTitle\"\n              defaultMessage=\"SCORE\"\n              />\n              </p>\n              <Input\n                name=\"homescore\"\n                onChange={this.filterUpdateHome.bind(this)}/>\n\n              <div className=\"ScoreList\">\n                {this.state.emptyarrayHome.map(team =>\n                  <div key={team}>\n\n                    <hr/>\n\n                    <div className=\"newScore\">\n                      <p>\n                      <FormattedMessage\n                      id=\"RESULT.selectPlayerHome\"\n                      defaultMessage=\"Select player\"\n                      />\n                      </p>\n                      <Select\n                        value={this.playerHome}\n                        onChange={this.handleChangePlayerHome}\n                        options={players}\n                      />\n                      <br/>\n                      <p>\n                      <FormattedMessage\n                      id=\"RESULT.selectGoaltypeHome\"\n                      defaultMessage=\"Select goaltype\"\n                      />\n                      </p>\n\n                      <Select\n                        value={this.goalTypeHome}\n                        onChange={this.handleChangeGoalHome}\n                        options={goaltypes}\n                      />\n\n                      <Button className=\"formbtnSave\" color=\"primary\" onClick={this.selectgoalHome} >\n                      <FormattedMessage\n                      id=\"RESULT.saveResultHomeButton\"\n                      defaultMessage=\"Save results\"\n                      />\n                      </Button>\n\n                    </div>\n                  </div>\n\n                )}\n\n              </div>\n\n            </Col>\n            <Col xs={12} sm={4}>\n              {this.getTeamName(this.state.awayteam) ? (\n                <h2>{this.getTeamName(this.state.awayteam)}</h2>) : (<h2>Away Team</h2>)}\n              <p>\n              <FormattedMessage\n              id=\"RESULT.awayScoreTitle\"\n              defaultMessage=\"SCORE\"\n              />\n              </p>\n              <Input\n                name=\"awayscore\"\n                onChange={this.filterUpdateAway.bind(this)}/>\n              <div className=\"ScoreList\">\n                {this.state.emptyarrayAway.map(team =>\n                  <div key={team}>\n\n                    <hr/>\n\n                    <div className=\"newScore\">\n                      <p>\n                      <FormattedMessage\n                      id=\"RESULT.selectPlayerAway\"\n                      defaultMessage=\"Select player\"\n                      />\n                      </p>\n                      <Select\n                        value={this.playerAway}\n                        onChange={this.handleChangePlayerAway}\n                        options={players}\n                      />\n                      <br/>\n                      <p>\n                      <FormattedMessage\n                      id=\"RESULT.selectGoaltypeAway\"\n                      defaultMessage=\"Select goaltype\"\n                      />\n                      </p>\n\n                      <Select\n                        value={this.goalTypeAway}\n                        onChange={this.handleChangeGoalAway}\n                        options={goaltypes}\n                      />\n\n                      <Button className=\"formbtnSave\" color=\"primary\" onClick={this.selectgoalAway} >\n                      <FormattedMessage\n                      id=\"RESULT.saveResultAwayButton\"\n                      defaultMessage=\"Save results\"\n                      />\n                      </Button>\n\n                    </div>\n                  </div>\n                  //this.state.awaygoals.push(goal)\n\n\n                )}\n\n              </div>\n              <br/>\n\n\n              <Button className=\"formbtnSave\" color=\"primary\" onClick={this.saveResult} >\n              <FormattedMessage\n              id=\"RESULT.saveButton\"\n              defaultMessage=\"Save results\"\n              />\n              </Button>\n              <Button className=\"formbtnDel\" color=\"primary\" onClick={this.delResult} >\n              <FormattedMessage\n              id=\"RESULT.delButton\"\n              defaultMessage=\"Delete results\"\n              />\n              </Button>\n\n\n\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Row, Grid, Col} from 'react-bootstrap';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport { ListGroup, ListGroupItem} from 'react-bootstrap';\nimport { Input, Button } from 'mdbreact';\nimport '../components/UpdatePerson.css'\nimport './Home.css';\nimport {PostData} from '../PostData'\nimport { FormattedMessage } from 'react-intl';\nimport '../components/Teamlist.css'\n\nimport './Home.css'\n\nexport default class Person extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      goaltypes:[],\n      goalname:'',\n      newgoalname:'',\n\n      goalID:'',\n\n    };\n\n    this.onChangeGoalName = this.onChangeGoalName.bind(this)\n    this.onChangeNewGoalName = this.onChangeNewGoalName.bind(this)\n\n  }\n\n\n  onChangeGoalName(event){\n    const goalname = event.target.value\n    this.setState({\n      goalname: goalname\n    })\n  }\n  onChangeNewGoalName(event){\n    const goalname = event.target.value\n    this.setState({\n      newgoalname: goalname\n    })\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/goaltypes`)\n    .then(result => result.json())\n    .then(goaltypes => this.setState({goaltypes}))\n\n  }\n\n  addGoalType = () =>{\n    let user = Object.assign({}, this.state);    //creating copy of object\n\n    var data = {\n\n      type: user.newgoalname\n    }\n\n    PostData('addgoaltype', data)\n  }\n    render() {\n\n    return(\n      <div>\n        <Grid>\n          <Row>\n            <Col xs={12} sm={6}>\n              <p className=\"h5 text-center mb-4\">\n              <FormattedMessage\n              id=\"GOALTYPES.registerMes\"\n              defaultMessage=\"REGISTERED GOALTYPES\"\n              />\n              </p>\n              <br/>\n              <div className=\"Teamlist\">\n                <ListGroup>\n                  <div>\n                    {this.state.goaltypes.map(goaltypes =>\n                      <ListGroupItem\n                        className=\"listingplayer\"\n                        onClick={\n                          e => {\n                            this.setState({\n                              goalname:goaltypes.type,\n                              goalID:goaltypes.goal_type_id,\n                            });\n                          }\n                        }\n\n                        key={goaltypes.goal_type_id}>\n                        {goaltypes.type}\n                      </ListGroupItem>)}\n                  </div>\n                </ListGroup>\n              </div>\n              <br/>\n            </Col>\n            <Col xs={12} sm={6}>\n              <Tabs defaultActiveKey={1}>\n                <Tab eventKey={1} title={\n                  <FormattedMessage\n                  id=\"GOALTYPES.editGoalTypesTab\"\n                  defaultMessage=\"Edit Goaltype\"\n                  />\n                }>\n                  <p className=\"h5 text-center mb-4\">\n                  <FormattedMessage\n                  id=\"GOALTYPES.editGoalTypes\"\n                  defaultMessage=\"EDIT GOALTYPE\"\n                  />\n                  </p>\n\n                  <br/><br/><br/><br/><br/><br/><br/><br/>\n\n                  <Input\n                    name=\"goalname\"\n                    value={(this.state.goalname ? this.state.goalname : '')}\n                    onChange={this.onChangeGoalName\n                    }/>\n                  <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\n                  <Button className=\"formbtnSave\" color=\"primary\" onClick={this.updatePerson} >\n                  <FormattedMessage\n                  id=\"GOALTYPES.saveEditButton\"\n                  defaultMessage=\"Save edit\"\n                  />\n                  </Button>\n                  <Button className=\"formbtnDel\" color=\"primary\" onClick={this.delPerson} >\n                  <FormattedMessage\n                  id=\"GOALTYPES.deleteButton\"\n                  defaultMessage=\"Delete goaltype\"\n                  />\n                  </Button>\n\n                </Tab>\n                <Tab eventKey={2} title={\n                  <FormattedMessage\n                  id=\"GOALTYPES.newGoalTypesTab\"\n                  defaultMessage=\"New Goaltype\"\n                  />\n                }>\n                  <p className=\"h5 text-center mb-4\">\n                  <FormattedMessage\n                  id=\"GOALTYPES.newGoalTypes\"\n                  defaultMessage=\"NEW GOALTYPE\"\n                  />\n                  </p>\n\n                  <br/><br/><br/><br/><br/><br/><br/><br/>\n\n                  <Input\n                    name=\"goalname\"\n                    value={(this.state.newgoalname ? this.state.newgoalname : '')}\n                    onChange={this.onChangeNewGoalName\n                    }/>\n                  <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\n                  <Button className=\"formbtnSave\" color=\"primary\" onClick={this.addGoalType} >\n                  <FormattedMessage\n                  id=\"GOALTYPES.newGoalButton\"\n                  defaultMessage=\"New Goaltype\"\n                  />\n                  </Button>\n                </Tab>\n              </Tabs>\n\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React,  { Component } from 'react';\nimport {Row, Grid, Col } from 'react-bootstrap';\nimport {Button, Input} from 'mdbreact'\nimport '../components/Teamlist.css'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      email:'',\n      admin: false,\n      id:'',\n      name:'',\n      adminBinary:'',\n\n    };\n    this.onAdminCheck = this.onAdminCheck.bind(this)\n  }\n\n\n  onAdminCheck(e){\n    this.setState({admin: !this.state.admin});\n  }\n\n  onChangeUsername(event){\n    const username = event.target.value\n    this.setState({\n      name: username\n    })\n  }\n\n  onChangeEmail(event){\n    const email = event.target.value\n    this.setState({\n      email: email\n    })\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/userslist`)\n    .then(result => result.json())\n    .then(users => this.setState({users}))\n  }\n    render(){\n      return(\n        <Grid>\n          <Row>\n            <Col xs={12} sm={4}></Col>\n            <Col xs={12} sm={4}>\n\n              <div>\n\n                <p>\n                <FormattedMessage\n                id=\"PROFILE.username\"\n                defaultMessage=\"Username:\"\n                />\n                </p>\n                <br/>\n\n                <Input\n                  name=\"firstname\"\n                  value={(this.state.name ? this.state.name: '')}\n                  onChange={this.onChangeUsername.bind(this)\n                  }/>\n\n                <br/>\n                <hr/>\n                <br/>\n                <p>\n                <FormattedMessage\n                id=\"PROFILE.email\"\n                defaultMessage=\"Email:\"\n                />\n                </p>\n                <br/>\n\n                <Input\n                  name=\"firstname\"\n                  value={(this.state.email ? this.state.email: '')}\n                  onChange={this.onChangeEmail.bind(this)\n                  }/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <Button>\n                <FormattedMessage\n                id=\"PROFILE.saveProfileButton\"\n                defaultMessage=\"Save profile\"\n                />\n                </Button>\n\n\n              </div>\n            </Col>\n            <Col xs={12} sm={4}></Col>\n\n          </Row>\n        </Grid>\n\n      )\n    }\n  }\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport {Row, Grid, Col, Image, ListGroup, ListGroupItem} from 'react-bootstrap';\nimport {Button} from 'mdbreact'\nimport AnonMatches from './Anonmatches'\nimport '../components/UpdatePerson.css'\nimport './Home.css'\nimport './Teams.css'\nimport { FormattedMessage } from 'react-intl';\n\n\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      teams:[],\n      teamID:'',\n      filterText:'',\n    };\n\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/teams`)\n    .then(result => result.json())\n    .then(teams => this.setState({teams}))\n\n  }\n  addDefaultSrc(ev){\n    ev.target.src = `images/teams/default.jpg`\n  }\n\n\n    render() {\n\n\n    return(\n      <div>\n        <Grid>\n          <h1>\n          <FormattedMessage\n          id=\"WATCHLIST.watchlistTitle\"\n          defaultMessage=\"Watchlist\"\n          />\n          </h1>\n          <Link to=\"/WatchlistEdit\">\n            <Button>\n            <FormattedMessage\n            id=\"WATCHLIST.editWatchlistButton\"\n            defaultMessage=\"Edit watchlist\"\n            />\n            </Button>\n          </Link>\n          <Row>\n            <Col xs={12} sm={6}>\n              <h2>\n              <FormattedMessage\n              id=\"WATCHLIST.playerHeader\"\n              defaultMessage=\"Players\"\n              />\n              </h2>\n              <h3>BIANCA EILERTSEN</h3>\n              <hr/>\n\n              <p>Date of birth: 14/10/1996</p>\n              <p> CAREER GOALS: 6</p>\n            </Col>\n            <Col xs={12} sm={6}>\n              <h2>\n              <FormattedMessage\n              id=\"WATCHLIST.teamHeader\"\n              defaultMessage=\"Teams\"\n              />\n              </h2>\n              <h3>Liverpool</h3>\n              <hr/>\n              <Col xs={12} sm={6}>\n                <Image src={`images/teams/Liverpool.jpg`} circle className=\"teamimages\" onError={this.addDefaultSrc} />\n              </Col>\n              <Col xs={12} sm={6}>\n                <br/><br/>\n                <p>\n                <FormattedMessage\n                id=\"WATCHLIST.statisticsHeader\"\n                defaultMessage=\"STATISTICS\"\n                />\n                </p>\n                <div className=\"content\">\n                  <p>\n                  <FormattedMessage\n                  id=\"WATCHLIST.statisticsWin\"\n                  defaultMessage=\"WIN:\"\n                  />\n                   6</p>\n                  <p>\n                  <FormattedMessage\n                  id=\"WATCHLIST.statisticsLoss\"\n                  defaultMessage=\"LOSS:\"\n                  />\n                   8</p>\n                  <p>\n                  <FormattedMessage\n                  id=\"WATCHLIST.statisticsDraw\"\n                  defaultMessage=\"DRAW:\"\n                  />\n                   2</p>\n                </div>\n              </Col>\n            </Col>\n          </Row>\n\n\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Row, Grid, Col, Image, ListGroup, ListGroupItem, } from 'react-bootstrap';\nimport {Button, Input} from 'mdbreact'\nimport Select from 'react-select';\n\nimport AnonMatches from './Anonmatches'\nimport '../components/UpdatePerson.css'\nimport './Home.css'\nimport './Teams.css'\n\nimport { FormattedMessage } from 'react-intl';\n\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      teams:[],\n      players:[],\n      teamsformatch:[],\n      selectedOptionPlayers:[],\n      teamID:'',\n      filterText:'',\n    };\n\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/teams`)\n    .then(result => result.json())\n    .then(teams => this.setState({teams}))\n\n    fetch(`https://ballc-frontend-be.herokuapp.com/playersformatch`)\n    .then(result => result.json())\n    .then(players => this.setState({players}))\n\n    fetch(`https://ballc-frontend-be.herokuapp.com/teamsformatch`)\n    .then(result => result.json())\n    .then(teamsformatch => this.setState({teamsformatch}))\n\n  }\n  addDefaultSrc(ev){\n    ev.target.src = `images/teams/default.jpg`\n  }\n  handleChangePlayers = (selectedOptionPlayers) => {\n    this.setState({ selectedOptionPlayers});\n  }\n  handleChangeTeams = (selectedOptionTeams) => {\n    this.setState({ selectedOptionTeams});\n  }\n\n    render() {\n\n      const { selectedOptionPlayers } = this.state.players;\n      const { selectedOptionTeams } = this.state.teamsformatch;\n\n    return(\n      <div>\n        <Grid>\n          <h1>\n          <FormattedMessage\n          id=\"WATCHLISTEDIT.editWatchlistTitle\"\n          defaultMessage=\"Edit watchlist\"\n          />\n          </h1>\n          <p>\n          <FormattedMessage\n          id=\"WATCHLISTEDIT.instructionMessage\"\n          defaultMessage=\"Use the dropdown to add to your favourites\"\n          />\n          </p>\n          <p>\n          <FormattedMessage\n          id=\"WATCHLISTEDIT.instructionMessageTwo\"\n          defaultMessage=\"and the list to remove\"\n          />\n          </p>\n          <Row>\n\n            <Col xs={12} sm={6}>\n              <h3>\n              <FormattedMessage\n              id=\"WATCHLISTEDIT.playerHeader\"\n              defaultMessage=\"Players\"\n              />\n              </h3>\n\n\n              <Select\n                value={selectedOptionPlayers}\n                onChange={this.handleChangePlayers}\n                options={this.state.players}\n              />\n              <div className=\"TeamlistMed\">\n\n                <ListGroup>\n                  <ListGroupItem>\n                    1\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    1\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    1\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    1\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    1\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    1\n                  </ListGroupItem>\n                </ListGroup>\n\n              </div>\n              <br/>\n\n\n            </Col>\n\n            <Col xs={12} sm={6}>\n              <h3>\n              <FormattedMessage\n              id=\"WATCHLISTEDIT.teamsHeader\"\n              defaultMessage=\"Teams\"\n              />\n              </h3>\n              <Select\n                value={selectedOptionTeams}\n                onChange={this.handleChangeTeams}\n                options={this.state.teamsformatch}\n              />\n              <div className=\"TeamlistMed\">\n\n                <ListGroup>\n                  <ListGroupItem>\n                    1\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    1\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    1\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    1\n                  </ListGroupItem>\n\n                </ListGroup>\n\n              </div>\n              <br/>\n\n\n\n              </Col>\n            </Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Row, Grid, Col, Image } from 'react-bootstrap';\nimport '../components/UpdatePerson.css'\nimport './Home.css'\nimport './Teams.css'\n\nimport { FormattedMessage } from 'react-intl';\n\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matches:[],\n\n    };\n\n  }\n  addDefaultSrc(ev){\n    ev.target.src = `images/teams/default.jpg`\n  }\n\n  componentDidMount() {\n    fetch(`https://ballc-frontend-be.herokuapp.com/matchlist`)\n    .then(result => result.json())\n    .then(matches => this.setState({matches}))\n\n  }\n\n\n\n    render() {\n\n    return(\n      <div>\n        <Grid>\n          <Row>\n            <h2>\n            <FormattedMessage\n            id=\"MATCHES.allMatchesTitle\"\n            defaultMessage=\"All Matches\"\n            />\n            </h2>\n            {this.state.matches.slice(0,10).map(team =>\n              <div className=\"matchmappingAnon\">\n                <legend>\n                  <Col xs={12} sm={4} key={team.home_team}>\n                    <h1 className=\"teamnames\">{team.home_team}</h1>\n                    <Image src={`images/teams/${team.home_team}.jpg`} circle className=\"teamimages\" onError={this.addDefaultSrc} />\n                    <h3>{team.home_result}</h3>\n                  </Col>\n                  <Col xs={12} sm={4}>\n\n                    <h3 className=\"greytext\">\n                    <FormattedMessage\n                    id=\"MATCHES.seasonHeader\"\n                    defaultMessage=\"Season\"\n                    />\n                     {team.season}</h3>\n                    <br/>\n                    <h2>{team.home_score} {String.fromCharCode(160)}{String.fromCharCode(160)}{String.fromCharCode(160)}{String.fromCharCode(160)}\n                      <FormattedMessage\n                      id=\"MATCHES.vs\"\n                      defaultMessage=\"VS\"\n                      />\n                      {String.fromCharCode(160)}{String.fromCharCode(160)}{String.fromCharCode(160)}{String.fromCharCode(160)}  {team.away_score} </h2>\n                    <br/>\n                    <h3 className=\"greytext\">{team.date}</h3>\n                  </Col>\n                  <Col xs={12} sm={4} key={team.away_team}>\n                    <h1 className=\"teamnames\">{team.away_team}</h1>\n                    <Image src={`images/teams/${team.away_team}.jpg`} circle className=\"teamimages\" onError={this.addDefaultSrc} />\n                    <h3>{team.away_result}</h3>\n                  </Col>\n                </legend>\n                <hr/>\n                <br/><br/><br/><br/><br/><br/><br/>\n\n\n              </div>\n            )}\n          </Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { Container, Row, Col, Input, Button } from 'mdbreact';\nimport {PostData} from '../PostData';\nimport axios from 'axios';\n\nclass Login extends React.Component  {\n\n  constructor(props){\n    super(props);\n    this.state={\n      \n      username:'',\n      password:'',\n      userDate: [],\n      users:'',\n      result:''\n    }\n    this.login = this.login.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  \n\n  login(){\n    if(this.state.username && this.state.password){\n      console.log(\"Login function\");\n      PostData('login', this.state);\n      const list = [...this.state.userDate];\n      let user = Object.assign({}, this.state);    //creating copy of object\n\n      var data = {\n        username: user.username,\n        password: user.password\n      }\n\n      this.sendingData();\n      list.push(data);\n\n      \n    }\n  }\n  onChange(e){\n    this.setState({[e.target.name]: e.target.value});\n    console.log(this.state);\n  }\n\n  \n\n  sendingData(){\n    axios.get('http://localhost:8080/check')\n    .then(function(response){\n\n      \n      reso = null;\n      responde = null;\n      var reso  = JSON.stringify(response.data);\n\n      var responde = JSON.parse(reso);\n      if(responde.token == \"\"){\n        //alert(\"sorry dude you did put wrong info\");\n      }else{\n      localStorage.setItem(\"userData\", reso);\n      alert(\"Welcome Back \" + responde.username);\n      responde = null;\n      window.location.reload(); \n      }\n      \n\n    })\n  }\n  test(){\n    var testing = this.sendingData;\n    console.log(testing);\n  }\n  render() {\n\n    return(\n\n      <Container>\n        <Row>\n          <Col md=\"6\">\n            <form>\n              <h1 className=\"h5 text-center mb-4\">Log in</h1>\n              <br/>\n              <div className=\"grey-text\">\n                <p>Username:</p>\n                <Input\n                  name=\"username\"\n                  group type=\"username\"\n                  validate error=\"wrong\"\n                  success=\"right\"\n                  onChange={this.onChange}/>\n                \n                <p> Password: </p>\n                <Input\n                  name=\"password\"\n                  group type=\"password\"\n                  onChange={this.onChange}\n                validate/>\n              </div>\n              <div className=\"text-center\">\n                <Button color=\"primary\" onClick={this.login} >Login</Button>\n              </div>\n              <ul>\n            {this.test}\n          </ul>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n};\n\nexport default Login;\n","import React from 'react';\nimport { Container, Row, Col, Input, Button } from 'mdbreact';\n\nimport {PostData} from '../PostData';\n\n\nclass Login extends React.Component  {\n\n\n  constructor(props){\n    super(props);\n    this.state={\n      username:'',\n      password:'',\n      email:'',\n      confpassword:'',\n    }\n    this.signup = this.signup.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n\n  signup(){\n    if(this.state.password === this.state.confpassword){\n      if(this.state.username && this.state.password && this.state.email){\n        console.log(\"Login function\");\n        let user = Object.assign({}, this.state);    //creating copy of object\n        var data = {\n          username: user.username,\n          password: user.password,\n          email: user.email\n        }\n        PostData('signup', data);\n      }\n      else {\n        alert(\"Please fill out all the fields!\")\n      }\n    }\n    else{ alert(\"Please make sure your passwords match!\")\n    }\n  }\n\n  onChange(e){\n    this.setState({[e.target.name]: e.target.value});\n    console.log(this.state);\n  }\n\n  render() {\n\n    return(\n      <Container>\n        <Row>\n          <Col md=\"6\">\n            <form>\n              <h1 className=\"h5 text-center mb-4\">Log in</h1>\n              <br/>\n              <div className=\"grey-text\">\n                <p>Username:</p>\n                <Input\n                  name=\"username\"\n                  group type=\"username\"\n                  validate error=\"wrong\"\n                  success=\"right\"\n                  onChange={this.onChange}/>\n\n                <p>Email:</p>\n                <Input\n                  name=\"email\"\n                  group type=\"email\"\n                  validate error=\"wrong\"\n                  placeholder=\"Email\"\n                  onChange={this.onChange}\n                success=\"right\"/>\n\n\n                <p> Password: </p>\n                <Input\n                  name=\"password\"\n                  group type=\"password\"\n                  onChange={this.onChange}\n                validate/>\n\n                <p> Confirm Password: </p>\n                <Input\n                  name=\"confpassword\"\n                  group type=\"password\"\n                  onChange={this.onChange}\n                validate/>\n              </div>\n\n              <div className=\"text-center\">\n                <Button color=\"primary\" onClick={this.signup} >Sign Up</Button>\n              </div>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n};\n\nexport default Login;\n","import React from 'react';\nimport {Glyphicon } from 'react-bootstrap';\nimport { Container, Row, Col } from 'mdbreact';\n\n\n\nclass Login extends React.Component  {\n\n\n  render() {\n\n    return(\n      <Container>\n        <Row>\n          <Col sm={1}>\n          </Col>\n          <Col sm={4}>\n            <br/>\n            <p className=\"greytext\">How come i cant access content?</p>\n            <p>Some of our content is exclusive to our users. To access this content, please make sure to sign in.</p>\n            <hr/>\n            <p className=\"greytext\">What is the watchlist?</p>\n            <p>With the watchlist, you're able to quickly access your favourite teams and players by the click of a button.</p>\n            <hr/>\n            <Col sm={6}><Glyphicon glyph=\"cog\" /></Col><Col sm={6}>Settings</Col>\n            <Col sm={6}><Glyphicon glyph=\"user\" /></Col><Col sm={6}>Profile</Col>\n            <Col sm={6}><Glyphicon glyph=\"star\" /></Col><Col sm={6}>Watchlist</Col>\n\n\n\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n};\n\nexport default Login;\n","import React, { Component } from 'react'\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem, Glyphicon } from 'react-bootstrap';\nimport { Modal, Tabs, Tab } from 'react-bootstrap';\nimport Login from  './Login';\nimport SignUp from './SignUp'\nimport FAQs from './FAQ'\nimport './Navigator.css';\nimport axios from 'axios';\n\nexport default class Navigator extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n        this.handleShowHelp = this.handleShowHelp.bind(this);\n        this.handleCloseHelp = this.handleCloseHelp.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      show: false,\n      showHelp: false,\n      logged: false,\n      userData: []\n\n    };\n  }\n\n  componentDidMount(){\n    var userData = localStorage.getItem(\"userData\");\n    var checking  = JSON.parse(userData);\n    if (checking == null){\n      this.setState({logged : true})\n    }else{\n      this.setState({logged : false})\n\n    }\n\n    console.log(this.state.logged);\n    //console.log(this.state.logged);\n\n  }\n\n  checkuser(){\n    /*\n    var test = false;\n    if (this.state.userData.username != \"\"){\n      test = true;\n    }\n*/\n    return false;\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  logingout(){\n\n    axios.get('http://localhost:8080/check')\n    .then(function(response){\n      console.log(response.data);\n    })\n\n    localStorage.setItem(\"userData\", null);\n    window.location.reload(); \n\n  }\n  \n  handleShow() {\n    this.setState({ show: true });\n  }\n\n  handleCloseHelp() {\n    this.setState({ showHelp: false });\n  }\n\n  handleShowHelp() {\n    this.setState({ showHelp: true });\n  }\n  render(){\n\n    return(\n      <div>\n\n        <Navbar inverse collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <a href=\"/\">Foul</a>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav>\n\n              <NavItem eventKey={3} href=\"/Matches\" to=\"/Matches\">\n                Matches\n              </NavItem>\n              <NavItem eventKey={3} href=\"/Teams\" to=\"/Teams\">\n                Teams\n              </NavItem>\n            </Nav>\n            <Nav pullRight>\n\n              <NavItem eventKey={4} href=\"/User\" to=\"/User\">\n                Profile\n                <p>{this.state.username}</p>\n              </NavItem>\n              <NavItem>\n              \n              </NavItem>\n              { this.state.logged ? <NavItem eventKey={1} onClick={this.handleShow}>login</NavItem> : <NavItem eventKey={1} onClick={this.logingout}>logout</NavItem>}\n              \n              <NavItem eventKey={1} href=\"/Watchlist\" to=\"/Watchlist\">\n                <Glyphicon glyph=\"star\" />\n              </NavItem>\n              <NavItem eventKey={1} href=\"/Profile\" to=\"/Profile\">\n                <Glyphicon glyph=\"user\" />\n              </NavItem>\n\n              <NavItem eventKey={1} href=\"/Profile\" to=\"/Profile\">\n                <Glyphicon glyph=\"cog\" />\n              </NavItem>\n              <NavItem eventKey={1} onClick={this.handleShowHelp}>\n                <Glyphicon glyph=\"question-sign\" />\n              </NavItem>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Access your BallC account!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tabs defaultActiveKey={1} id=\"uncontrolled-tab-example\">\n              <Tab eventKey={1} title=\"Log in\">\n                <Login />\n              </Tab>\n              <Tab eventKey={2} title=\"Sign up\">\n                <SignUp />\n              </Tab>\n            </Tabs>\n          </Modal.Body>\n          <Modal.Footer>\n            <p>Thank you for using our site!</p>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal show={this.state.showHelp} onHide={this.handleCloseHelp}>\n          <Modal.Header closeButton>\n            <Modal.Title>Need some help?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FAQs />\n          </Modal.Body>\n          <Modal.Footer>\n            <p>Thank you for using our site!</p>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\nimport './NavigatorAdm.css'\n\nexport default class Navigator extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      show: false\n    };\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n  render(){\n    return(\n      <div className=\"NavigatorAdm\">\n        <Navbar collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <a>Admin</a>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav>\n              <NavDropdown eventKey={2} title=\"Seasons\" id=\"basic-nav-dropdown\">\n                <MenuItem eventKey={2.1} href=\"/NewSeason\" to=\"/NewSeason\">Create new season</MenuItem>\n                <MenuItem eventKey={2.2} href=\"/EditSeason\" to=\"/EditSeason\">Edit seasons</MenuItem>\n              </NavDropdown>\n              <NavDropdown eventKey={2} title=\"Match\" id=\"basic-nav-dropdown\">\n                <MenuItem eventKey={2.1} href=\"/Match\" to=\"/Match\">Create new match</MenuItem>\n                <MenuItem eventKey={2.2} href=\"/Result\" to=\"/Result\">Assign results</MenuItem>\n                <MenuItem eventKey={2.2} href=\"/Goaltypes\" to=\"/Goaltypes\">Goaltypes</MenuItem>\n\n              </NavDropdown>\n\n\n              <NavItem eventKey={3} href=\"/Team\" to=\"/Team\">\n                Teams\n              </NavItem>\n              <NavItem eventKey={3} href=\"/Associations\" to=\"/Associations\">\n                Associations\n              </NavItem>\n              <NavItem eventKey={3} href=\"/Locations\" to=\"/Locations\">\n                Locations\n              </NavItem>\n              <NavItem eventKey={3} href=\"/Address\" to=\"/Address\">\n                Address\n              </NavItem>\n\n            </Nav>\n            <Nav pullRight>\n              <NavDropdown eventKey={2} title=\"Person\" id=\"basic-nav-dropdown\">\n                <MenuItem eventKey={2.1} href=\"/Person\" to=\"/Person\">Person</MenuItem>\n                <MenuItem eventKey={2.3} href=\"/Roles\" to=\"/Roles\">Roles</MenuItem>\n              </NavDropdown>\n              <NavItem eventKey={3} href=\"/User\" to=\"/User\">\n                Users\n              </NavItem>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Next from './pages/Next';\nimport Teams from './pages/Teams';\nimport User from './pages/User';\nimport Admin from './pages/Admin';\nimport Person from './pages/Person';\nimport Team from './pages/Team';\nimport Association from './pages/Association';\nimport Teaminfo from './pages/Teaminfo';\nimport Roles from './pages/Roles';\nimport Address from './pages/Address';\nimport Locations from './pages/CRUDLocation';\nimport Associations from './pages/CRUDAssociation';\nimport NewSeason from './pages/NewSeason';\nimport EditSeason from './pages/EditSeason';\nimport Match from './pages/Match';\nimport Result from './pages/Result';\nimport Goaltypes from './pages/Goaltypes'\nimport Profile from './pages/Profile';\nimport Watchlist from './pages/Watchlist'\nimport WatchlistEdit from './pages/WatchlistEdit'\nimport Matches from './pages/Matches'\n\n\n\nimport Navbar from './components/Navigator'\nimport NavigatorAdm from './components/NavigatorAdm'\n\n\n\nclass App extends Component {\n\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     show: false,\n  //     users:[],\n  //   }\n\n  //   var username= null;\n\n  // }\n\n  // componentDidMount() {\n  //   fetch(`http://localhost:8080/checkadmin`)\n  //   .then(result => result.json())\n  //   .then(users => this.setState({users}))\n\n  // }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      showUser:false,\n      users: []\n    };\n  }\n\n  componentDidMount(){\n    var userData = localStorage.getItem(\"userData\");\n    var userString = JSON.parse(userData);\n    if(userString == null){\n      console.log(\"NOT LOGGED IN\");\n    }else{\n      this.setState({users : JSON.parse(userData)});\n      this.setState({showUser: true});\n      if(userString.admin){\n        this.setState({show: true});\n      }\n    }\n  }\n\n\n  showUser(){\n    /*\n    var user = null;\n    axios.get('http://localhost:8080/checkadmin')\n    .then(response => {\n      this.setState({users: response.data})\n    })\n    return(\n\n    )\n    */\n  }\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar/>\n          { this.state.show ?  <NavigatorAdm/> : null}\n\n          \n          {this.showUser()}\n          {console.log(this.state.users)}\n\n          <Route exact path=\"/\" component={Home}></Route>\n          <Route path=\"/next\" component={Next}></Route>\n          <Route path=\"/Teams\" component={Teams}></Route>\n          <Route path=\"/User\" component={User}></Route>\n          <Route path=\"/Profile\" component={Profile}></Route>\n          <Route path=\"/Admin\" component={Admin}></Route>\n          <Route path=\"/Person\" component={Person}></Route>\n          <Route path=\"/Team\" component={Team}></Route>\n          <Route path=\"/Association\" component={Association}></Route>\n          <Route path=\"/Teaminfo\" component={Teaminfo}></Route>\n          <Route path=\"/Roles\" component={Roles}></Route>\n          <Route path=\"/Address\" component={Address}></Route>\n          <Route path=\"/Locations\" component={Locations}></Route>\n          <Route path=\"/Associations\" component={Associations}></Route>\n          <Route path=\"/NewSeason\" component={NewSeason}></Route>\n          <Route path=\"/EditSeason\" component={EditSeason}></Route>\n          <Route path=\"/Match\" component={Match}></Route>\n          <Route path=\"/Result\" component={Result}></Route>\n          <Route path=\"/Goaltypes\" component={Goaltypes}></Route>\n          <Route path=\"/Watchlist\" component={Watchlist}></Route>\n          <Route path=\"/WatchlistEdit\" component={WatchlistEdit}></Route>\n          <Route path=\"/Matches\" component={Matches}></Route>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {IntlProvider, addLocaleData } from 'react-intl';\n\nimport en from \"react-intl/locale-data/en\";\nimport no from \"react-intl/locale-data/no\";\n\nimport localeData from \"./../src/locales/data.json\";\n\naddLocaleData([...en, ...no]);\n\n// Define user's language. Different browsers have the user locale defined\n// on different fields on the `navigator` object, so we make sure to account\n// for these different by checking all of them\nconst language =\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage;\n\n// Split locales with a region code\nconst languageWithoutRegionCode = language.toLowerCase().split(/[_-]+/)[0];\n\n// Try full locale, try locale without region code, fallback to 'en'\nconst messages =\n  localeData[languageWithoutRegionCode] ||\n  localeData[language] ||\n  localeData.en;\n\n\n\n\n\nclass IntlProviderWrapper extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.switchToEnglish = () =>\n      this.setState({ locale: \"en\", messages: localeData[\"en\"] });\n\n    this.switchToNorwegian = () =>\n      this.setState({ locale: \"no\", messages: localeData[\"no\"] });\n\n    // pass everything in state to avoid creating object inside render method (like explained in the documentation)\n    this.state = {\n      locale: language,\n      messages: messages,\n    };\n  }\n\n  render() {\n\n    const { locale, messages } = this.state;\n    return (\n        <div> \n        <button type=\"button\" onClick={this.switchToNorwegian}>Norsk</button>\n        <button type=\"button\" onClick={this.switchToEnglish}>Engelsk</button>\n        <IntlProvider\n          key={locale}\n          locale={locale}\n          messages={messages}\n          defaultLocale=\"en\"\n        >\n  \n    \t\t\t<App />\n   \t\t\t\t\n\n        </IntlProvider>\n        </div>\n    );\n  }\n}\n\n\n\nReactDOM.render(\n\t<div> \n        <IntlProviderWrapper/>\n  \t</div>\n\t, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}